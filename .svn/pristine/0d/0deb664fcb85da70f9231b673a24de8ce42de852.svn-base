package kr.or.ddit.works.community.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.security.RealUserWrapper;
import kr.or.ddit.works.community.service.CommunityServcie;
import kr.or.ddit.works.community.vo.CommunityVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/{companyNo}/community")
public class CommunityController {

	@Autowired
	private CommunityServcie service;


	/**
	 * 커뮤니티 목록 조회
	 * @param companyNo 고객사 번호
	 * @param model
	 * @return
	 */
	@GetMapping("")
	public String selectListAllCommunity(
		@PathVariable("companyNo") String companyNo
		, Model model
        , HttpSession session
        , Authentication authentication
	) {

		// 로그인한 사용자 정보 가져오기
        RealUserWrapper userWrapper = (RealUserWrapper) authentication.getPrincipal();

        // 로그인한 사용자의 커뮤니티 목록 가져오기
        List<CommunityVO> communityList = service.memberCommunityList(authentication.getName());

        // 생성된 커뮤니티목록 전체 가져오기
        List<CommunityVO> allCommunityList = service.communityList(authentication.getName());

        log.info("communityList ================= {} ", communityList);
        session.setAttribute("realUser", userWrapper.getRealUser());
		model.addAttribute("companyNo",companyNo);
		model.addAttribute("communityList", communityList);
		model.addAttribute("allCommunityList", allCommunityList);

		return "gw:community/communityList";
	}

	@GetMapping("/getMembers")
	public ResponseEntity<Map<String, Object>> communityMembers(
		@PathVariable("companyNo") String companyNo
		, @RequestParam("communityNo") Long communityNo
	){
		List<CommunityVO> members = service.communityMember(communityNo);
		List<CommunityVO> board = service.boardList(communityNo);
		log.info("members =================================members{}", members);
		Map<String, Object> response = new HashMap<>();
		response.put("board", board);
		response.put("members", members);
		log.info("response =================================members{}", response);
		return ResponseEntity.ok(response);
	}

	@GetMapping("/getPost")
	public ResponseEntity<Map<String, Object>> boardList(
		@PathVariable("companyNo") String companyNo
		, @RequestParam("communityNo") Long communityNo
	){
		List<CommunityVO> board = service.boardList(communityNo);

		Map<String, Object> response = new HashMap<>();
		response.put("board", board);

		log.info("========================== response {}", response);
		return ResponseEntity.ok(response);
	}

	/**
	 * 커뮤니티 상세 조회
	 * @param companyNo 고객사 번호
	 * @param communityNo 커뮤니티 방 번호
	 * @param model
	 * @return
	 */
//	@GetMapping("/{communityNo}")
//	public String selectCommunityDetail(
//		@Param("companyNo") String companyNo
//		, @Param("communityNo") int communityNo
//		, Model model
//	) {
//		model.addAttribute("companyNo",companyNo);
//		model.addAttribute("communityNo",communityNo);
//
//		return "gw:community/communityDetail";
//	}
}
