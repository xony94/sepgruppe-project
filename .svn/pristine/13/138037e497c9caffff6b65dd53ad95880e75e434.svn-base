/** 
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 * 2025. 3. 26.     	JSW            최초 생성
 *
 * </pre>
 */
$(document).ready(function () {
       const table = $("#multi-filter-select").DataTable({
			serverSide: true,
		    processing: true,
			dom: 'lfrtip',
		    ajax: {
		        url: contextPath + "/" + companyNo + "/employee/admin/ajaxList",
		        type: "GET",
		        data: function(d) {
					d.searchType = $('select[name="searchType"]').val();
		            d.searchWord = $('#custom-search-input').val();
					console.log("데이터 ==>", d);
		        }
		    },
		    columns: [
		        { data: 'empNo' },
		        { data: 'empNm' },
		        { data: 'deptName' },
		        { data: 'positionName' },
		        { data: 'empEmail' }
		    ],
			  lengthMenu: [10, 15, 20, 25],
			  info: false,

			  language: {
			    lengthMenu: "_MENU_ 개씩 보기",
			    zeroRecords: "일치하는 사원이 없습니다.",
			    info: "_TOTAL_명 중 _START_부터 _END_까지 표시",
			    infoEmpty: "사원이 없습니다.",
			    infoFiltered: "(전체 _MAX_명 중 필터링됨)",
			    search: "검색:",
			    paginate: {
			      previous: "이전",
			      next: "다음"
			    },
			    processing: "로딩 중...",
			  }
        });
		// 기본 자동 검색창 제거
		$('.dataTables_filter').html(`
		  <select name="searchType" class="form-select form-select-sm" style="width: 120px;">
	        <option value="empNm">이름</option>
	        <option value="deptName">부서</option>
	        <option value="positionName">직책</option>
	      </select>
		    <input type="text" id="custom-search-input" class="form-control form-control-sm" placeholder="검색어 입력" style="width:150px !important;">
		    <button class="btn btn-primary btn-sm" id="dt-search-btn">검색</button>
		`);

		  // 검색 버튼 클릭 시 검색 실행
		  $(document).on('click', '#dt-search-btn', function () {
		    table.ajax.reload();
		  });

		  // 엔터 입력 시 검색 실행
		  $(document).on('keydown', '#custom-search-input', function (e) {
		    if (e.key === 'Enter') {
		      e.preventDefault();
		      $('#dt-search-btn').click();
		    }
		  });
		function loadDepartments() {
			const $wrap = $('#dept-select-wrap');
	
			// 버튼 숨기기
			$('#loadDeptBtn').hide();
	
			// select 요소 생성
			const $deptSelect = $('<select id="deptCd" name="deptCd" class="form-select mt-2"></select>');
			$deptSelect.append('<option value="">부서 선택</option>');
			$wrap.append($deptSelect);

			$.ajax({
				url: contextPath + "/" + companyNo + "/employee/departments",
				type: 'GET',
				success: function (departments) {
					departments.forEach(dept => {
						$deptSelect.append(`<option value="${dept.deptCd}">${dept.deptName}</option>`);
					});
				},
				error: function () {
					Swal.fire({
					   icon: 'error',
					   title: '부서 불러오기 실패',
					   text: '서버로부터 부서 정보를 가져오지 못했습니다.'
				 	});
				}
			});
		}
		
		// 버튼 클릭 시 부서 select 보여주기
		$('#dept-select-wrap').on('click', '#loadDeptBtn', loadDepartments);

		
		$('#employeeForm').on('submit', function (e) {
		  e.preventDefault();
		  const formData = new FormData(this);
		  $.ajax({
		    url: contextPath + "/" + companyNo + "/employee/new",
		    type: 'POST',
		    data: formData,
		    processData: false,
		    contentType: false,
		    success: function () {
				Swal.fire({
				    icon: 'success',
				    title: '사원 등록 성공!',
				    showConfirmButton: false,
				    timer: 1500
			  	});
				  $('#employeeModal').modal('hide');
				  setTimeout(() => location.reload(), 1500);
				},
		    error: function () {
				Swal.fire({
				    icon: 'error',
				    title: '사원 등록 실패',
				    text: '입력 정보를 다시 확인해주세요.'
			  	});
		    }
		  });
		});
		
		$(document).on('click', '#downExcel', function (e) {
		    e.preventDefault();

		    const searchType = $('select[name="searchType"]').val();
		    const searchWord = $('#custom-search-input').val(); 
			
			console.log("searchType:", searchType);
			   console.log("searchWord:", searchWord);

		    const query = new URLSearchParams({
		        searchType: searchType || '',
		        searchWord: searchWord || ''
		    }).toString();

		    const downloadUrl = `${contextPath}/${companyNo}/employee/admin/excelDownload?${query}`;
		    window.location.href = downloadUrl;
		});
		
      });