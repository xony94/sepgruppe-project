package kr.or.ddit.works.project.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.works.mybatis.mappers.ProjectMapper;
import kr.or.ddit.works.organization.vo.EmployeeVO;
import kr.or.ddit.works.project.vo.ProjectVO;

/**
 * 공유프로젝트 서비스임플
 * @author JYS
 * @since 2025. 3. 16.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 16.     	JYS	          최초 생성
 *
 * </pre>
 */
@Service
public class ProjectServiceImpl implements ProjectService {
	
	@Autowired
	private ProjectMapper projectMapper;
	
	 @Override
	    public List<ProjectVO> selectListAllProject(String empId) {
	        return projectMapper.selectListAllProject(empId);
	    }
	
	 @Override
	    public ProjectVO selectProjectDetail(long projectNo) {
	        List<ProjectVO> projectList = projectMapper.selectProjectDetail(projectNo);
	        return (projectList != null && !projectList.isEmpty()) ? projectList.get(0) : null;
	    }
	
	 @Override
	    public void insertProject(ProjectVO project) {
	        projectMapper.insertProject(project);  // 프로젝트 삽입 후
	        if (project.getProjectNo() == null) {
	            throw new RuntimeException("프로젝트 번호 생성 실패");
	        }
	    }
	 
	 @Override
	    public void insertParticipant(long projectNo, String empId) {
	        ProjectVO.Participant participant = new ProjectVO.Participant(empId, "");  // 사원 ID로 참가자 생성
	        participant.setProjectNo(projectNo);  // 프로젝트 번호 설정
	        projectMapper.insertParticipant(participant);  // 매퍼로 전달
	    }
	
	 @Override
	    public void insertParticipants(long projectNo, List<ProjectVO.Participant> participants) {
	        for (ProjectVO.Participant participant : participants) {
	            participant.setProjectNo(projectNo);  // 각 참여자에 대해 프로젝트 번호 설정
	        }
	        projectMapper.insertParticipants(participants);  // 매퍼로 전달
	    }
	
	 @Override
	    public boolean updateProject(ProjectVO project) {
	        return projectMapper.updateProject(project) > 0;
	    }
	
	 @Override
	    public List<EmployeeVO> selectListAllEmployee(String companyNo) {
	        return projectMapper.selectListAllEmployee(companyNo);
	    }
	}
