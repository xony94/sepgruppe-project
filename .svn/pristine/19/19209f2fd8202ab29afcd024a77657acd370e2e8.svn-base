<!-- 
 * == 개정이력(Modification Information) ==
 *   
 *   수정일      			수정자           수정내용
 *  ============   	============== =======================
 *  2025. 3. 24.     	SJH            최초 생성
 *
-->
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>설문 결과 보기</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 20px;
            background-color: #f4f7fc;
        }
        .container {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            max-width: 800px;
            margin: auto;
        }
        canvas {
            max-width: 50%;
            height: auto;
        }
    </style>
</head>
<body>
<div class="container">
    <h2 id="surveyTitle">설문 제목</h2>
    <p id="surveyDescription">설문 설명</p>
    <div id="questionList"></div>
    <div id="chartContainer"></div>
</div>

<script>
    const urlParams = new URLSearchParams(window.location.search);
    const surveyId = urlParams.get("id");
    const BASE_URL = "${pageContext.request.contextPath}";
    const companyNo = "${companyNo}";

    async function fetchSurveyDetails() {
        try {
            const res1 = await fetch(`${BASE_URL}/${companyNo}/surveyApi/surveys/${surveyId}/details`);
            const data1 = await res1.json();

            document.getElementById("surveyTitle").textContent = data1.title || "제목 없음";
            document.getElementById("surveyDescription").textContent = data1.description || "설명 없음";
            window.surveyData = data1;
        } catch (err) {
            document.getElementById("surveyDescription").textContent = "설문 정보를 불러오는 데 실패했습니다.";
            console.error(err);
        }
    }

    async function fetchSurveyResponses() {
        try {
            const res2 = await fetch(`${BASE_URL}/${companyNo}/surveyApi/surveys/${surveyId}/responses`);
            const data2 = await res2.json();

            if (!data2.data || data2.data.length === 0) {
                document.getElementById("surveyDescription").textContent = "설문 응답이 없습니다.";
                return;
            }

            processResults(data2);
        } catch (err) {
            document.getElementById("surveyDescription").textContent = "응답 데이터를 불러오는 데 실패했습니다.";
            console.error(err);
        }
    }

    function processResults(data) {
        const questionStats = {};

        data.data.forEach(response => {
            response.pages.forEach(page => {
                page.questions.forEach(question => {
                    const questionId = question.id;
                    const questionText = question.headings?.[0]?.heading || "질문 없음";

                    if (!questionStats[questionId]) {
                        questionStats[questionId] = {
                            text: questionText,
                            answers: {}
                        };
                    }

                    if (question.answers) {
                        question.answers.forEach(answer => {
                            const choiceText = answer.choice_id
                                ? findChoiceText(questionId, answer.choice_id)
                                : answer.text || "기타";

                            questionStats[questionId].answers[choiceText] =
                                (questionStats[questionId].answers[choiceText] || 0) + 1;
                        });
                    }
                });
            });
        });

        renderQuestions(questionStats);
        renderCharts(questionStats);
    }

    function findChoiceText(questionId, choiceId) {
        const question = surveyData.pages.flatMap(p => p.questions).find(q => q.id === questionId);
        if (question && question.answers && question.answers.choices) {
            const choice = question.answers.choices.find(c => c.id === choiceId);
            return choice ? choice.text : "알 수 없음";
        }
        return "알 수 없음";
    }

    function renderQuestions(stats) {
        const questionList = document.getElementById("questionList");
        questionList.innerHTML = "";

        Object.entries(stats).forEach(([qid, q]) => {
            const div = document.createElement("div");
            div.innerHTML = `<h4>${q.text}</h4>`;
            questionList.appendChild(div);
        });
    }

    function renderCharts(stats) {
        const chartContainer = document.getElementById("chartContainer");
        chartContainer.innerHTML = "";

        Object.entries(stats).forEach(([qid, q]) => {
            const canvas = document.createElement("canvas");
            canvas.id = `chart_${qid}`;
            chartContainer.appendChild(canvas);

            new Chart(canvas, {
                type: "pie",
                data: {
                    labels: Object.keys(q.answers),
                    datasets: [{
                        data: Object.values(q.answers),
                        backgroundColor: ["#3498db", "#2ecc71", "#f1c40f", "#e74c3c", "#9b59b6"]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: "bottom" }
                    }
                }
            });
        });
    }

    if (surveyId) {
        fetchSurveyDetails();
        fetchSurveyResponses();
    } else {
        alert("잘못된 접근입니다.");
        location.href = `${BASE_URL}/${companyNo}/surveyApi/list`;
    }
</script>
</body>
</html>
