<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.works.mybatis.mappers.ReservationMapper">

    <!-- 전체 예약 목록 조회 -->
    <select id="selectListAllReservation" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
        SELECT 
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        FROM RESERVATION
        ORDER BY RESERVATION_START_TIME
    </select>

    <!-- 예약 상세 조회 -->
    <select id="selectReservationDetail" parameterType="String" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
        SELECT 
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        FROM RESERVATION
        WHERE RESERVATION_NO = #{reservationNo}
    </select>

    <!-- 예약 추가 -->
    <insert id="insertReservation" parameterType="kr.or.ddit.works.reservation.vo.ReservationVO">
        INSERT INTO RESERVATION (
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        ) VALUES (
            #{reservationNo},
            #{roomNo},
            #{empId},
            #{reservationDate},
            #{reservationStartTime},
            #{reservationEndTime},
            #{reservationContent}
        )
    </insert>

    <!-- 예약 수정 -->
    <update id="updateReservation" parameterType="kr.or.ddit.works.reservation.vo.ReservationVO">
        UPDATE RESERVATION
        SET 
            ROOM_NO = #{roomNo},
            EMP_ID = #{empId},
            RESERVATION_DATE = #{reservationDate},
            RESERVATION_START_TIME = #{reservationStartTime},
            RESERVATION_END_TIME = #{reservationEndTime},
            RESERVATION_CONTENT = #{reservationContent}
        WHERE 
            RESERVATION_NO = #{reservationNo}
    </update>

    <!-- 예약 삭제 -->
    <delete id="deleteReservation" parameterType="String">
        DELETE FROM RESERVATION
        WHERE 
            RESERVATION_NO = #{reservationNo}
    </delete>

    <!-- 특정 날짜의 예약 조회 -->
    <select id="selectReservationsByDate" parameterType="java.time.LocalDate" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
        SELECT 
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        FROM RESERVATION
        WHERE TRUNC(RESERVATION_DATE) = TRUNC(#{reservationDate}) 
        ORDER BY RESERVATION_START_TIME
    </select>

    <!-- 로그인한 사용자의 예약 목록 조회 -->
    <select id="getMyReservationsByEmpId" parameterType="String" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
        SELECT 
            r.RESERVATION_NO, 
            r.ROOM_NO, 
            rm.ROOM_NM AS roomName,  -- 회의실 이름
            r.EMP_ID, 
            r.RESERVATION_DATE, 
            r.RESERVATION_START_TIME, 
            r.RESERVATION_END_TIME, 
            r.RESERVATION_CONTENT 
        FROM 
            RESERVATION r
        JOIN 
            MEETING_ROOM rm ON r.ROOM_NO = rm.ROOM_NO  -- 회의실 정보를 가져오기 위해 조인
        WHERE 
            r.EMP_ID = #{empId}  -- 해당 사용자의 ID로 변경
        ORDER BY 
            r.RESERVATION_START_TIME
    </select>
    
    <!-- 특정 날짜와 회의실 번호에 대한 예약 현황 조회 -->
    <select id="getReservationsByDateAndRoom" parameterType="map" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
        SELECT 
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        FROM RESERVATION
        WHERE 
            TRUNC(RESERVATION_DATE) = TRUNC(#{date}) 
            AND ROOM_NO = #{roomNo}
        ORDER BY RESERVATION_START_TIME
    </select>

	<!-- 특정 날짜의 예약 조회 -->
	<select id="findReservationsByDate" parameterType="java.time.LocalDate" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
	    SELECT *
	    FROM RESERVATION
	    WHERE TRUNC(RESERVATION_DATE) = TRUNC(#{date})
	</select>

    <!-- 고객사 관리자 모든 회의실 목록 조회 -->
		<select id="selectListAllRoom" resultType="kr.or.ddit.works.reservation.vo.MeetingRoomVO">
		    SELECT 
		        ROOM_NO,
		        ROOM_NM,
		        ROOM_LOCATION,
		        ROOM_AVAILABILITY,
		        ROOM_CAPACITY
		    FROM MEETING_ROOM
		    ORDER BY ROOM_NO
		</select>

   <!-- 고객사 관리자 회의실 상세 조회 -->
	<select id="selectRoomDetail" parameterType="long" resultType="kr.or.ddit.works.reservation.vo.MeetingRoomVO">
	    SELECT 
	        ROOM_NO,
	        ROOM_NM,
	        ROOM_LOCATION,
	        ROOM_AVAILABILITY,
	        ROOM_CAPACITY
	    FROM MEETING_ROOM
	    WHERE ROOM_NO = #{roomNo}
	</select>

    <!--고객사 관리자 회의실 등록 -->
	<insert id="insertRoom" parameterType="kr.or.ddit.works.reservation.vo.MeetingRoomVO">
	    INSERT INTO MEETING_ROOM (ROOM_NM, ROOM_LOCATION, ROOM_AVAILABILITY, ROOM_CAPACITY)
	    VALUES (#{roomNm}, #{roomLocation}, #{roomAvailability}, #{roomCapacity})
	</insert>

    <!-- 고객사 관리자 회의실 수정 -->
	<update id="updateRoom" parameterType="kr.or.ddit.works.reservation.vo.MeetingRoomVO">
	    UPDATE MEETING_ROOM
	    SET 
	        ROOM_NM = #{roomNm},
	        ROOM_LOCATION = #{roomLocation},
	        ROOM_AVAILABILITY = #{roomAvailability},
	        ROOM_CAPACITY = #{roomCapacity}
	    WHERE 
	        ROOM_NO = #{roomNo}
	</update>

    <!-- 고객사 관리자 회의실 삭제 -->
    <delete id="deleteRoom" parameterType="long">
        DELETE FROM MEETING_ROOM
        WHERE 
            ROOM_NO = #{roomNo}
    </delete>

</mapper>
