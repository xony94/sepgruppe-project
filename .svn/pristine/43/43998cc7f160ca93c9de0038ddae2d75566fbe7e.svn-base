package kr.or.ddit.works.reservation.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

/**
 * 회의실 관리 컨트롤러
 * 
 * @author KKM
 * @since 2025. 3. 14.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 14.     	KKM	          최초 생성
 *
 * </pre>
 */
@Controller
@RequestMapping("/a001/meetingroom")
public class MeetingRoomController {
	/** 회의실 목록 조회 */
    @GetMapping("")
    public String selectListAllRoom() {
        return "meetingroom/meetingroomList"; // 회의실 목록 페이지
    }

    /** 회의실 상세 조회 */
    @GetMapping("/{roomNo}")
    public String selectRoomDetail(@PathVariable("roomNo") String roomNo) {
        System.out.println("조회할 회의실 번호: " + roomNo);
        return "meetingroom/meetingroomDetail"; // 회의실 상세 페이지
    }

    /** 관리자 - 새 회의실 등록 폼 이동 */
    @GetMapping("new")
    public String insertRoomFormUI() {
        return "meetingroom/meetingroomForm"; // 회의실 등록 폼
    }

    /** 관리자 - 새 회의실 등록 */
    @PostMapping("new")
    public String insertRoom(@RequestParam String roomNm,
                             @RequestParam String roomLocation,
                             @RequestParam int roomCapacity,
                             @RequestParam String roomStatus,
                             @RequestParam(required = false) String roomGuidelines) {
        // 회의실 등록 로직 추가
        System.out.printf("등록할 회의실: 이름=%s, 위치=%s, 수용인원=%d, 상태=%s, 이용안내=%s%n",
                          roomNm, roomLocation, roomCapacity, roomStatus, roomGuidelines);
        return "redirect:/a001/meetingroom"; // 등록 후 회의실 목록 페이지로 리다이렉트
    }

    /** 관리자 - 회의실 수정 폼 이동 */
    @GetMapping("{roomNo}/edit")
    public String updateRoomFormUI(@PathVariable("roomNo") String roomNo) {
        return "meetingroom/meetingroomEdit"; // 회의실 수정 폼
    }

    /** 관리자 - 회의실 수정 */
    @PutMapping("{roomNo}/edit")
    public String updateRoom(@PathVariable("roomNo") String roomNo,
                             @RequestParam String roomNm,
                             @RequestParam String roomLocation,
                             @RequestParam int roomCapacity,
                             @RequestParam String roomStatus,
                             @RequestParam(required = false) String roomGuidelines) {
        // 회의실 수정 로직 추가
        System.out.printf("수정할 회의실: 번호=%s, 이름=%s, 위치=%s, 수용인원=%d, 상태=%s, 이용안내=%s%n",
                          roomNo, roomNm, roomLocation, roomCapacity, roomStatus, roomGuidelines);
        return "redirect:/a001/meetingroom/" + roomNo; // 수정 후 해당 회의실 상세 페이지로 리다이렉트
    }

    /** 관리자 - 회의실 삭제 */
    @DeleteMapping("{roomNo}/delete")
    public String deleteRoom(@PathVariable("roomNo") String roomNo) {
        // 회의실 삭제 로직 추가
        System.out.println("삭제할 회의실 번호: " + roomNo);
        return "redirect:/a001/meetingroom"; // 삭제 후 회의실 목록 페이지로 리다이렉트
    }
}
