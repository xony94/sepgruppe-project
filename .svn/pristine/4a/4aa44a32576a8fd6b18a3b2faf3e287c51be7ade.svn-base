package kr.or.ddit.works.project.controller;

import java.security.Principal;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import kr.or.ddit.works.organization.vo.EmployeeVO;
import kr.or.ddit.works.project.service.ProjectService;
import kr.or.ddit.works.project.vo.ProjectVO;

/**
 * 공유 프로젝트 컨트롤러
 * @author JYS
 * @since 2025. 3. 14.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 14.     	JYS	          최초 생성
 *
 * </pre>
 */
@Controller
@RequestMapping("/{companyNo}/project")
//@RequestMapping("/a001/project")
public class ProjectController {
	
	@Autowired
	private ProjectService projectService;
	
    @InitBinder
    public void initBinder(WebDataBinder binder) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        dateFormat.setLenient(false); // 엄격한 날짜 형식 체크
        binder.registerCustomEditor(Date.class, "projectStartTime", new CustomDateEditor(dateFormat, true));
        binder.registerCustomEditor(Date.class, "projectEndTime", new CustomDateEditor(dateFormat, true));
    }
	
    /** 일반 사원 - 사원 개인의 공유 프로젝트 목록 */
	 @GetMapping("")
	    public String selectListAllProject(
	            @PathVariable("companyNo") String companyNo, 
	            Principal principal,  // 로그인한 사용자 정보
	            Model model) {
	        
	        // 로그인한 사용자의 ID 가져오기
	        String empId = principal.getName();  // 또는 다른 방법으로 사용자 ID를 가져올 수 있습니다.
	        
	        // 사용자의 프로젝트 목록 조회
	        List<ProjectVO> projects = projectService.selectListAllProject(empId);
	        
	        // 모델에 프로젝트 목록 추가
	        model.addAttribute("projects", projects);
	        model.addAttribute("companyNo", companyNo);  // 회사 번호 추가 (필요에 따라)

	        // 프로젝트 목록 페이지로 이동
	        return "gw:project/projectList"; 
	    }
	
	 /** 일반 사원 - 프로젝트 상세 보기 */
	 @GetMapping("/{projectNo}")
	 public String selectProjectDetail(@PathVariable("companyNo") String companyNo, 
	                                    @PathVariable("projectNo") long projectNo, 
	                                    Model model) {
	     // 프로젝트 상세 정보 가져오기
	     List<ProjectVO> projectDetails = projectService.selectProjectDetail(projectNo); // 단일 프로젝트 정보 가져오기

	     model.addAttribute("companyNo", companyNo); // 회사 번호 추가
	     model.addAttribute("projectDetails", projectDetails); // 프로젝트 상세 정보 추가

	     return "gw:project/projectDetail"; // JSP로 이동
	 }

	 @GetMapping("/new")
	 public String insertProjectFormUI(@PathVariable("companyNo") String companyNo, Model model, Principal principal) {
	     String empId = principal.getName(); // 로그인한 사용자 ID 가져오기
	     model.addAttribute("empId", empId); // 모델에 추가

	     // 오늘 날짜를 ISO 형식으로 가져오기 (시간 제외)
	     LocalDate now = LocalDate.now(); // LocalDate로 변경
	     DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
	     String currentDate = now.format(formatter); // currentDate로 변경
	     model.addAttribute("currentDate", currentDate); // 모델에 현재 날짜 추가

	     // 회사의 모든 사원 목록 조회
	     List<EmployeeVO> employees = projectService.selectListAllEmployee(companyNo);
	     model.addAttribute("employees", employees); // 모델에 사원 목록 추가

	     return "gw:project/projectForm"; // JSP로 이동
	 }

	 /** 일반 사원 - 프로젝트 생성 */
	 @PostMapping("/new")
	 public String insertProject(@PathVariable("companyNo") String companyNo, 
	                             @ModelAttribute ProjectVO projectVO, 
	                             Principal principal) {
	     // 로그인한 사용자의 ID 가져오기
	     String empId = principal.getName(); // 로그인한 사용자 ID
	     projectVO.setEmpId(empId); // emp_id 설정

	     // 프로젝트 생성 로직
	     projectService.insertProject(projectVO); // 프로젝트 정보 저장

	     return "redirect:/" + companyNo + "/project"; // 프로젝트 목록으로 리다이렉트
	 }


    /** 일반사원 - 프로젝트 수정  */
    @GetMapping("{projectNo}/edit")
    public String updateProjectFormUI(@PathVariable("companyNo") String companyNo) {
    	return "gw:project/projectEdit";
    }
    
    /** 일반사원 - 프로젝트 수정 */
    @PutMapping("{projectNo}/edit")
    public String updateProject(@PathVariable("companyNo") String companyNo,
    		 					@PathVariable("projectNo") String projectNo) {
    	return "redirect:/" + companyNo + "/project/" + projectNo;
    }
}
