package kr.or.ddit.works.notice.controller;

import java.util.List;

import javax.mail.Session;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.paging.DefaultPaginationRenderer;
import kr.or.ddit.paging.PaginationInfo;
import kr.or.ddit.paging.PaginationRenderer;
import kr.or.ddit.paging.SimpleCondition;
import kr.or.ddit.validate.InsertGroup;
import kr.or.ddit.works.mybatis.mappers.OrganizationMapper;
import kr.or.ddit.works.notice.service.NoticeService;
import kr.or.ddit.works.notice.vo.NoticeVO;
import kr.or.ddit.works.organization.vo.OrganizationVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 공지사항 컨트롤러
 *
 * @author JYS
 * @since 2025. 3. 14.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 14.     	JYS	          최초 생성
 *
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/{companyNo}/notice")
public class NoticeController {

    @Autowired
    private NoticeService service;

    @Autowired
    private OrganizationMapper organiMapper;

    /** 공지사항 목록 조회 */
    @GetMapping("")
    public String selectListAllNotice(
        @PathVariable("companyNo") String companyNo,
        @ModelAttribute("condition") SimpleCondition condition, // 키워드 검색 조건 (제목, 내용, 제목+내용)
        @RequestParam(name = "category", required = false, defaultValue = "all") String category, // 분류 선택 조건 (전체, 전사공지, 부서공지)
        @RequestParam(name = "page", required = false, defaultValue = "1") int currentPage, // 페이징 처리
        Model model,
        Authentication authentication
    ) {
        // 로그인 된 사용자의 부서코드 가져오기
        OrganizationVO member = organiMapper.selectOrganization(authentication.getName());
        String deptCd = member.getDeptCd();

        // VO에 부서코드 가져오기
        NoticeVO noticeVo = new NoticeVO();
        noticeVo.setDeptCd(deptCd);
        noticeVo.setCategory(category);

        // 페이징 처리 + 분류선택 처리
        PaginationInfo<NoticeVO> paging = new PaginationInfo<>();
        paging.setCurrentPage(currentPage); 	// 페이징처리
        paging.setSimpleCondition(condition); 	// 키워드검색
        paging.setDetailCondition(noticeVo); 	// 분류선택

        // 서비스 실행
        List<NoticeVO> noticeList = service.selectAllNotice(paging);

        // 조회된 데이터 개수 -> 페이징 처리를 위함
        int total_cnt = service.selectAllNoticeTotalRecord(paging);
        paging.setTotalRecord(total_cnt);

        // 페이징 처리 렌더링
        PaginationRenderer renderer = new DefaultPaginationRenderer();
        String pagingHTML = renderer.renderPagination(paging);

        // model 담기
        model.addAttribute("pagingHTML", pagingHTML);
        model.addAttribute("noticeList", noticeList);
        model.addAttribute("companyNo", companyNo);
        model.addAttribute("category", category);
        model.addAttribute("member", member);

        return "gw:notice/noticeList";
    }

    /** 공지사항 상세 조회 */
    @GetMapping("/{noticeNo}")
    public String selectNoticeDetail(
        @PathVariable("companyNo") String companyNo,
        @PathVariable("noticeNo") String noticeNo,
        Model model
    ) {
        model.addAttribute("companyNo", companyNo);
        return "gw:notice/noticeDetail";
    }

    /** 관리자 - 새 공지글 등록 폼 이동 */
    @GetMapping("new")
    public String insertNoticeFormUI(
        @PathVariable("companyNo") String companyNo,
        @ModelAttribute("member") NoticeVO member,
        Model model,
        Authentication authentication
    ) {
    	// 로그인한 사용자 ID 저장
    	String empId = authentication.getName();
    	member.setEmpId(empId);

    	// 임시저장한 글 개수
        int draftCnt = service.isDraftCnt(empId);
        // 임시저장한 글 내용
        List<NoticeVO> draftList = service.isDraftList(empId);

        // 임시저장한 글 목록을 클릭했을 때 불러오기
        if(!draftList.isEmpty()) {
        	NoticeVO selectDraft = draftList.get(0); // 첫 번째 임시저장 글
        	model.addAttribute("selectDraft", selectDraft);
        }

        // scope에 저장
        model.addAttribute("draftList", draftList);
        model.addAttribute("draftCnt", draftCnt);
        model.addAttribute("companyNo", companyNo);
        return "gw:notice/noticeForm";
    }

    /** 관리자 - 새 공지글 등록 */
    @PostMapping("new")
    public String insertNotice(
        @Validated(InsertGroup.class) @ModelAttribute("notice") NoticeVO notice,
        @PathVariable("companyNo") String companyNo,
        RedirectAttributes redirectAttributes,
        Model model
    ) {
        service.insertNotice(notice);

        model.addAttribute("companyNo", companyNo);
        return "redirect:/" + companyNo + "/notice";
    }

    /** 관리자 - 공지글 수정 */
    @PutMapping("{noticeNo}/edit")
    public String updateNotice(
        @PathVariable("companyNo") String companyNo,
        @PathVariable("noticeNo") long noticeNo,
        Model model
    ) {
        model.addAttribute("companyNo", companyNo);
        return "redirect:/" + companyNo + "/notice/" + noticeNo;
    }
}
