package kr.or.ddit.works.mail.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.works.mail.service.MailService;
import kr.or.ddit.works.mail.vo.MailReceptionVO;

@Controller
@RequestMapping("/{companyNo}/mail")
public class MailController {

	@Autowired
	private MailService mailService;
	
	@GetMapping("") //메일함 메인 겸 받은메일함
	public String getMailList(@PathVariable("companyNo") String companyNo
			, Model model) throws Exception {
			List<MailReceptionVO> mailList = mailService.getMailList();
			model.addAttribute("mailList", mailList);
			model.addAttribute("companyNo", companyNo);
		return "gw:mail/mailList";
	}
	
	@GetMapping("/mySentMail") //보낸메일함
	public String getSentMailList(@PathVariable("companyNo") String companyNo
			, Model model) throws Exception {
			List<MailReceptionVO> sentMailList = mailService.getSentMailList();
			model.addAttribute("sentMailList", sentMailList);
			model.addAttribute("companyNo", companyNo);
		return "gw:mail/sentList";
	}	
	
	@GetMapping("/mailContent/{mailId}") //받은메일 상세보기
	public String getMailContent(@PathVariable("companyNo") String companyNo,
	                             @PathVariable("mailId") String mailId,
	                             Model model) throws Exception {
	    String mailContent = mailService.getMailContent(mailId);
	    model.addAttribute("mailContent", mailContent);
	    model.addAttribute("mailId", mailId);
	    model.addAttribute("companyNo", companyNo);
	    return "gw:mail/mailContent";
	}
	
	@PostMapping("/favorite") //즐겨찾기
	@ResponseBody
	public Map<String, Object> updateFavorite(@RequestBody Map<String, Object> payload) {
	    String mailId = (String) payload.get("mailId");
	    boolean favorite = (Boolean) payload.get("favorite");

	    int result = mailService.favorite(mailId, favorite ? "Y" : "N");

	    Map<String, Object> res = new HashMap<>();
	    res.put("success", result > 0);
	    return res;
	}


}
