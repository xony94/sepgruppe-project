package kr.or.ddit.works.schedule.controller;

import java.security.Provider.Service;
import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.validate.InsertGroup;
import kr.or.ddit.works.schedule.service.ScheduleService;
import kr.or.ddit.works.schedule.vo.ScheduleVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 일정관리 컨트롤러
 * @author JYS
 * @since 2025. 3. 16.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 16.     	JYS	          최초 생성
 *
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/{companyNo}/schedule")
public class ScheduleController {
	
	public static final String MODELNAME = "schedule";
	
	@Autowired
	private ScheduleService scheduleService;
	
	@GetMapping("")
	public String readScheduleList(@PathVariable("companyNo") String companyNo
		, Model model) {
	    List<ScheduleVO> scheduleList = scheduleService.readScheduleList();
	    
	    if (scheduleList == null || scheduleList.isEmpty()) {
	        System.out.println("일정이 없습니다");
	    } else {
	        System.out.println("일정있음");
	    }
	    
	    System.out.println("================================mh");
	    for(int i=0;i<scheduleList.size();i++) {
	    	System.out.println(scheduleList.get(i));
	    	
	    }
	    
	    
	    model.addAttribute("scheduleList", scheduleList);
	    model.addAttribute("companyNo", companyNo);
	    return "gw:schedule/scheduleList";
	}
	
//	@GetMapping("/{schdlNo}.do")
//	public ScheduleVO readSchedule(@PathVariable("schdlNo") int schdlNo) {
//		
//		ScheduleVO sch = scheduleService.readSchedule(schdlNo);
//		
//		return scheduleService.readSchedule(schdlNo);
//	}
	@GetMapping("/scheduleDetail.do")
	public String doGet(
			@RequestParam("what") String schdlNo
			, Model model
	) {
		int scheduleId = Integer.parseInt(schdlNo);
		List<ScheduleVO> schedule = scheduleService.readSchedule(scheduleId);
		model.addAttribute("schedule", schedule);
		
		return "groupware/schedule/scheduleDetail";
		
	}
	
	@ResponseBody
	@GetMapping("/createSchedule.ajax")
	public ScheduleVO createSchedule(@RequestParam("menu") String menu, Model model){
//		List<ScheduleVO> schedule = scheduleService.readSchedule(scheduleId);
//		model.addAttribute("schedule", schedule);
		
		ScheduleVO rvo = new ScheduleVO();
		rvo.setEmpId(menu);
		
		return rvo;
	}
	
	
	
	@GetMapping("/scheduleInsert.do")
	public String insertScheduleForm(Model model) {
	    model.addAttribute("schedule", new ScheduleVO());
	    return "groupware/schedule/scheduleForm";
	}

	
	@PostMapping("/scheduleInsert.do")
	public String insertSchedule(
		@Validated(InsertGroup.class) @ModelAttribute(MODELNAME) ScheduleVO schedule
		, BindingResult errors
		, RedirectAttributes redirectAttributes
	) {
	if (!errors.hasErrors()) {
		scheduleService.createSchedule(schedule); //db에 저장
		return "redirect:/{companyNo}/schedule";
	} else {
		redirectAttributes.addFlashAttribute(MODELNAME, schedule);
		String errorAttrName = BindingResult.MODEL_KEY_PREFIX + MODELNAME;
		redirectAttributes.addFlashAttribute(errorAttrName, errors);
	}
	return "redirect:/scheduleInsert.do";
		
	}
	
	
}
