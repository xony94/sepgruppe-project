<!-- 
 * == 개정이력(Modification Information) ==
 *   
 *   수정일      			수정자           수정내용
 *  ============   	============== =======================
 *  2025. 4. 12.     	JSW            최초 생성
 *
-->
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
<security:authentication property="principal.realUser" var="realUser" />
<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/groupware/css/schedule/mainScheduleWidget.css" />

<div class="calendar-widget card">
  <div class="calendar-header">
    <button class="nav-btn" onclick="changeMonth(-1)">&#10094;</button>
    <span id="calendarTitle" class="calendar-title"></span>
    <button class="nav-btn" onclick="changeMonth(1)">&#10095;</button>
  </div>
  <div class="calendar-days">
    <div class="day-label">일</div><div class="day-label">월</div><div class="day-label">화</div>
    <div class="day-label">수</div><div class="day-label">목</div><div class="day-label">금</div><div class="day-label">토</div>
    <div id="calendarGrid"></div>
  </div>
  <div class="calendar-detail" id="calendarDetail">
    <p class="text-muted">날짜를 클릭하면 일정이 표시됩니다.</p>
  </div>
</div>

<script id="schedule-data" type="application/json">
  ${scheduleJson}
</script>

<script>
  const scheduleMap = JSON.parse(document.getElementById("schedule-data").textContent);
  const today = new Date();
  let currentYear = today.getFullYear();
  let currentMonth = today.getMonth(); // 0-based

  function renderCalendar(year, month) {
    const title = document.getElementById("calendarTitle");
    title.textContent = year + "." + ('0' + (month + 1)).slice(-2);

    const firstDay = new Date(year, month, 1).getDay();
    const lastDate = new Date(year, month + 1, 0).getDate();
    const prevLastDate = new Date(year, month, 0).getDate();

    const grid = document.getElementById("calendarGrid");
    grid.innerHTML = "";

    const totalCells = Math.ceil((firstDay + lastDate) / 7) * 7;

    for (let i = 0; i < totalCells; i++) {
      const cell = document.createElement("div");
      cell.classList.add("calendar-cell");

      let date;

      if (i < firstDay) {
        // 이전달
        date = new Date(year, month - 1, prevLastDate - (firstDay - i - 1));
        cell.classList.add("dimmed");
      } else if (i >= firstDay + lastDate) {
        // 다음달
        date = new Date(year, month + 1, i - firstDay - lastDate + 1);
        cell.classList.add("dimmed");
      } else {
        // 이번달
        date = new Date(year, month, i - firstDay + 1);
      }

      const yyyyMMdd = date.toISOString().split("T")[0];
      const day = date.getDate();

      if (date.getDay() === 0) cell.classList.add("sunday");
      if (date.getDay() === 6) cell.classList.add("saturday");

      cell.dataset.date = yyyyMMdd;
      let innerHtml = `<div class="date-num">${day}</div>`;

      if (scheduleMap[yyyyMMdd] && scheduleMap[yyyyMMdd].length > 0) {
        innerHtml += `<div class="schedule-badge">${scheduleMap[yyyyMMdd].length}</div>`;
      }

      cell.innerHTML = innerHtml;
      cell.addEventListener("click", () => showScheduleDetail(yyyyMMdd));
      grid.appendChild(cell);
    }
  }

  function changeMonth(offset) {
    currentMonth += offset;
    if (currentMonth < 0) {
      currentMonth = 11;
      currentYear--;
    } else if (currentMonth > 11) {
      currentMonth = 0;
      currentYear++;
    }
    renderCalendar(currentYear, currentMonth);
  }

  function showScheduleDetail(date) {
    const detailBox = document.getElementById("calendarDetail");
    const events = scheduleMap[date] || [];
    if (events.length === 0) {
      detailBox.innerHTML = `<p class="text-muted">${date} 등록된 일정이 없습니다.</p>`;
      return;
    }

    let html = "<ul>";
    events.forEach(ev => {
      html += `<li><strong>[${ev.schdlType}]</strong> ${ev.schdlNm}</li>`;
    });
    html += "</ul>";
    detailBox.innerHTML = html;
  }

  document.addEventListener("DOMContentLoaded", () => {
    renderCalendar(currentYear, currentMonth);
  });
</script>