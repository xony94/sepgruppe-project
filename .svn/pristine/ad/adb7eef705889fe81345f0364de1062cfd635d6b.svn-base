<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.works.mybatis.mappers.NoticeMapper">

	<resultMap type="NoticeVO" id="noticeMap" autoMapping="true">
		<id property="empId" column="EMP_ID"/>
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="noticeNo" column="NOTICE_NO"/>
		<result property="noticeCategory" column="NOTICE_CATEGORY"/>
		<result property="noticeTitle" column="NOTICE_TITLE"/>
		<result property="noticeContent" column="NOTICE_CONTENT"/>
		<result property="noticeCreatedAt" column="NOTICE_CREATED_AT"/>
		<result property="noticeUpdatedAt" column="NOTICE_UPDATED_AT"/>
		<result property="noticeViewCount" column="NOTICE_VIEW_COUNT"/>
		<result property="isDraft" column="IS_DRAFT"/>
		<collection property="file" ofType="AttachFileVO">
			<id property="attachFileNo" column="ATTACH_FILE_NO"/>
			<result property="fileGroupNo" column="FILE_GROUP_NO"/>
			<result property="attachFileNo" column="ATTACH_FILE_NO"/>
			<result property="attachFileName" column="ATTACH_FILE_NAME"/>
			<result property="attachOrgFileName" column="ATTACH_ORG_FILE_NAME"/>
			<result property="attachFileSize" column="ATTACH_FILE_SIZE"/>
			<result property="attachFilePath" column="ATTACH_FILE_PATH"/>
			<result property="attachFileExt" column="ATTACH_FILE_EXT"/>
			<result property="attachFileDate" column="ATTACH_FILE_DATE"/>
			<result property="attachFileStatus" column="ATTACH_FILE_STATUS"/>
			<result property="empId" column="EMP_ID"/>
		</collection>
	</resultMap>

	<!-- 공지사항 조회 조건 -->
    <sql id="commonWhereClause">
        WHERE 1 = 1
        <!-- 공지사항 분류 선택 조건 -->
        <if test="detailCondition.category == 'all'">
            AND
            ( (N.NOTICE_CATEGORY LIKE '부서%' AND U.DEPT_CD = #{detailCondition.deptCd})
            OR
                (N.NOTICE_CATEGORY LIKE '전사%') )
        </if>
        <if test="detailCondition.category == 'company'">
            AND
            N.NOTICE_CATEGORY LIKE '전사%'
        </if>
        <if test="detailCondition.category == 'depart'">
            AND
            (N.NOTICE_CATEGORY LIKE '부서%' AND U.DEPT_CD = #{detailCondition.deptCd})
        </if>

        <!-- 공지사항 검색 필터링 조건 -->
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
            AND (
                <choose>
                    <when test="simpleCondition.searchType == 'title'">
                        INSTR(N.NOTICE_TITLE, #{simpleCondition.searchWord}) > 0
                    </when>
                    <when test="simpleCondition.searchType == 'content'">
                        INSTR(N.NOTICE_CONTENT, #{simpleCondition.searchWord}) > 0
                    </when>
                    <otherwise>
                        (INSTR(N.NOTICE_TITLE, #{simpleCondition.searchWord}) > 0
                        OR
                        INSTR(N.NOTICE_CONTENT, #{simpleCondition.searchWord}) > 0)
                    </otherwise>
                </choose>
            )
        </if>

        <!-- 임시저장된 공지사항 제외 조건 -->
        AND
        	N.IS_DRAFT != 'Y'
    </sql>

    <!-- 공지사항 전체 조회 -->
    <select id="selectAllNotice" parameterType="NoticeVO" resultType="NoticeVO">
        SELECT NOTICE.*
        FROM (
            SELECT
                ROWNUM RNUM, NOTICELIST.*
            FROM (
                SELECT
                    NOTICE_NO
                    , N.EMP_ID
                    , N.NOTICE_CATEGORY
                    , N.NOTICE_TITLE
                    , N.NOTICE_CONTENT
                    , TO_CHAR(N.NOTICE_CREATED_AT, 'YYYY-MM-DD') AS NOTICE_CREATED_AT
                    , N.NOTICE_UPDATED_AT
                    , N.NOTICE_VIEW_COUNT
                    , N.IS_DRAFT
                    , N.FILE_GROUP_NO
                    , U.POSITION_NAME
                    , U.EMP_NM
                    , U.DEPT_CD
                FROM
                    NOTICE N
                INNER JOIN
                    ORGANIZATION U ON N.EMP_ID = U.EMP_ID
                <include refid="commonWhereClause" />
                ORDER BY NOTICE_NO DESC
            ) NOTICELIST
        ) NOTICE
        WHERE
            NOTICE.RNUM BETWEEN #{startRow} AND #{endRow}
    </select>

    <!-- 공지사항 총 레코드 수 조회 -->
    <select id="selectAllNoticeTotalRecord" resultType="int">
        SELECT
            COUNT(*)
        FROM
            NOTICE N
        INNER JOIN
            ORGANIZATION U ON N.EMP_ID = U.EMP_ID
        <include refid="commonWhereClause" />
    </select>

	<!-- 게시글 등록 -->
	<insert id="insertNotice" parameterType="NoticeVO">
		INSERT INTO NOTICE (
		    NOTICE_NO
		    , EMP_ID
		    , NOTICE_CATEGORY
		    , NOTICE_TITLE
		    , NOTICE_CONTENT
		    , NOTICE_CREATED_AT
		    , IS_DRAFT
		    , FILE_GROUP_NO
	    ) VALUES (
	        NOTICE_SEQ.NEXTVAL
			, #{empId,jdbcType=VARCHAR}
			, #{noticeCategory,jdbcType=VARCHAR}
			, #{noticeTitle,jdbcType=VARCHAR}
			, #{noticeContent,jdbcType=VARCHAR}
			, TO_CHAR(SYSDATE, 'YYYY-MM-DD')
			<if test="isDraft == 'Y'">
				, 'Y'
			</if>
			<if test="isDraft != 'Y'">
				, 'N'
			</if>
			, #{fileGroupNo,jdbcType=NUMERIC}
	    )
	</insert>

	<!-- 임시저장글 개수 -->
	<select id="isDraftCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM
			NOTICE
		WHERE
			IS_DRAFT = 'Y'
		AND
			EMP_ID = #{empId,jdbcType=VARCHAR}
	</select>

	<!-- 임시저장글 가져오기 -->
	<select id="isDraftList" resultType="NoticeVO">
		SELECT
		  NOTICE_NO
		  , EMP_ID
		  , NOTICE_CATEGORY
		  , NOTICE_TITLE
		  , NOTICE_CONTENT
		  , IS_DRAFT
		FROM
		    NOTICE
		WHERE
		    IS_DRAFT = 'Y'
		    AND EMP_ID = #{empId,jdbcType=VARCHAR}
	</select>

	<!-- 게시글 삭제 -->
	<delete id="deleteNotice">
		DELETE FROM
			NOTICE
		WHERE
			EMP_ID = #{empId,jdbcType=VARCHAR}
		AND NOTICE_NO IN
		<foreach collection="noticeNo" item="noticeNo" open="(" close=")" separator=",">
			#{noticeNo, jdbcType=NUMERIC}
		</foreach>
	</delete>

	<!-- 게시글 단순 전체 조회 -->
	<select id="basicSelectAll">
		SELECT
		    NOTICE_NO
		    , N.EMP_ID
		    , N.NOTICE_CATEGORY
		    , N.NOTICE_TITLE
		    , N.NOTICE_CONTENT
		    , TO_CHAR(N.NOTICE_CREATED_AT, 'YYYY-MM-DD') AS NOTICE_CREATED_AT
		    , N.NOTICE_UPDATED_AT
		    , N.NOTICE_VIEW_COUNT
		    , N.IS_DRAFT
		    , N.FILE_GROUP_NO
		    , U.POSITION_NAME
		    , U.EMP_NM
		    , U.DEPT_CD
		FROM
		    NOTICE N
		INNER JOIN
		    ORGANIZATION U ON N.EMP_ID = U.EMP_ID
		WHERE
		    N.NOTICE_NO = #{noticeNo, jdbcType=NUMERIC}
	</select>

	<!-- 공지사항 수정 -->
	<update id="updateNotice">
		UPDATE
			NOTICE
		SET
			NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR}
			, NOTICE_CONTENT = #{noticeContent,jdbcType=VARCHAR}
			, NOTICE_UPDATED_AT = CURRENT_DATE
			<if test="isDraft == 'Y'">
				, IS_DRAFT = 'Y'
			</if>
			<if test="isDraft != 'Y'">
				, IS_DRAFT = 'N'
			</if>
			, FILE_GROUP_NO = #{fileGroupNo,jdbcType=NUMERIC}
		WHERE
			EMP_ID = #{empId,jdbcType=VARCHAR}
		AND
			NOTICE_NO = #{noticeNo, jdbcType=NUMERIC}
	</update>

	<!-- 공지사항 조회수 UPDATE -->
	<update id="noticeViewCnt">
		UPDATE
			NOTICE
		SET
			NOTICE_VIEW_COUNT = NOTICE_VIEW_COUNT + 1
		WHERE
			NOTICE_NO = #{noticeNo, jdbcType=NUMERIC}
	</update>

	<!-- 파일 업로드 INSERT -->
	<insert id="insertNoticeFile" parameterType="java.util.Map">

	    INSERT INTO ATTACH_FILE (
	        ATTACH_FILE_NO
	        , FILE_GROUP_NO
	        , ATTACH_FILE_NAME
	        , ATTACH_ORG_FILE_NAME
	        , ATTACH_FILE_SIZE
	        , ATTACH_FILE_PATH
	        , ATTACH_FILE_EXT
	        , ATTACH_FILE_DATE
	        , ATTACH_FILE_STATUS
	        , EMP_ID
	    ) VALUES
	    <foreach collection="fileList" item="file" separator=",">
	        (
            	(SELECT 'NOTICE_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ATTACH_FILE_NO, 13))), 0) + 1, 3, '0') FROM ATTACH_FILE)
	            , #{file.fileGroupNo,jdbcType=NUMERIC}
	            , #{file.attachFileName,jdbcType=VARCHAR}
	            , #{file.attachOrgFileName,jdbcType=VARCHAR}
	            , #{file.attachFileSize,jdbcType=NUMERIC}
	            , #{file.attachFilePath,jdbcType=VARCHAR}
	            , #{file.attachFileExt,jdbcType=VARCHAR}
	            , TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	            , #{file.attachFileStatus,jdbcType=CHAR}
	            , #{file.empId,jdbcType=VARCHAR}
	        )
	    </foreach>
	</insert>
</mapper>
