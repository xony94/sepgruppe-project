package kr.or.ddit.works.project.controller;

import java.security.Principal;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.works.mybatis.mappers.TaskMapper;
import kr.or.ddit.works.project.service.TaskService;
import kr.or.ddit.works.project.vo.ProjectParticipantVO;
import kr.or.ddit.works.project.vo.ProjectVO;
import kr.or.ddit.works.project.vo.TaskVO;
import lombok.extern.slf4j.Slf4j;

/**
 * 공유 프로젝트 일감 컨트롤러
 * @author KKM
 * @since 2025. 3. 25.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 25.     	KKM	          최초 생성
 *
 * </pre>
 */
@Slf4j
@Controller
@RequestMapping("/{companyNo}/task")
public class TaskController {
	
	@Autowired
	private TaskService taskService;
	
	 @Autowired
	 private TaskMapper taskMapper;
	
	/** 일반 사원 - 모든 일감 목록 */
	 @GetMapping("")
	 public String selectListAllTask(
		        @PathVariable("companyNo") String companyNo,
		        Model model) {  // Principal 매개변수 제거

		    // 모든 일감 목록 조회
		    List<TaskVO> tasks = taskService.selectListAllTask();

		    // 모델에 일감 목록 및 회사 번호 추가
		    model.addAttribute("tasks", tasks);
		    model.addAttribute("companyNo", companyNo);  // 회사 번호 추가

		    // 일감 목록 페이지로 이동
		    return "gw:task/taskList"; 
	    }
	
	 /** 특정 일감 상세 조회 */
		@GetMapping("/{taskNo}")
		public String selectTaskDetail(
		        @PathVariable("companyNo") String companyNo,
		        @PathVariable("taskNo") int taskNo, 
		        Model model) {
			// 특정 일감 상세 정보 조회
		    TaskVO taskDetail = taskService.selectTaskDetail(taskNo); // 서비스에서 상세 정보 조회
		    
		    // 다음 업무 번호 및 이전 업무 번호 조회
		    int nextTaskNo = taskService.getNextTaskNo(taskNo); // 다음 업무 번호 조회
		    int previousTaskNo = taskService.getPreviousTaskNo(taskNo); // 이전 업무 번호 조회

		    // 모델에 일감 상세 정보 및 회사 번호 추가
		    model.addAttribute("taskDetail", taskDetail);
		    model.addAttribute("nextTaskNo", nextTaskNo); // 다음 업무 번호 추가
		    model.addAttribute("previousTaskNo", previousTaskNo); // 이전 업무 번호 추가
		    model.addAttribute("companyNo", companyNo); // 회사 번호 추가

		    // 일감 상세 페이지로 이동
		    return "gw:task/taskDetail"; // taskDetail.jsp 파일을 반환
		}
		
		@GetMapping("/new")
		public String insertTaskFormUI(
		        @PathVariable("companyNo") String companyNo,
		        @RequestParam(value = "projectNo", required = false) Long projectNo, // 선택된 프로젝트 번호
		        Model model,
		        Principal principal) {
		    
		    String empId = principal.getName(); // 로그인한 사용자의 ID 가져오기
		    List<ProjectVO> projects = taskService.selectAllProjects(empId);
		    model.addAttribute("projects", projects);
		    model.addAttribute("companyNo", companyNo);
		    
		    // 선택된 프로젝트 번호를 모델에 추가
		    if (projectNo != null) {
		        model.addAttribute("projectNo", projectNo);
		    }

		    // 초기 참여자 목록을 비워둡니다.
		    model.addAttribute("participants", new ArrayList<ProjectParticipantVO>());
		    
		    return "gw:task/taskForm"; // taskForm.jsp로 이동
		}

		@PostMapping("/new")
		public String insertTask(
		        @PathVariable("companyNo") String companyNo, 
		        @ModelAttribute TaskVO task,
		        @RequestParam(value = "projectNo", required = false) Long projectNo // 선택된 프로젝트 번호 추가
		) {
		    // 선택된 프로젝트 번호를 태스크에 추가
		    if (projectNo != null) {
		        task.setProjectNo(projectNo); // 태스크 객체에 프로젝트 번호 설정
		    }
		    
		    // 일감 등록 로직
		    boolean isInserted = taskService.insertTask(task); // 등록 성공 여부

		    // 등록 성공 시, 상세 페이지로 리다이렉트
		    if (isInserted) {
		        long taskNo = taskMapper.getLastInsertedTaskNo(); // 마지막으로 삽입된 ID를 가져오는 방법도 있지만, 시퀀스를 사용하므로 필요 없음
		        return "redirect:/" + companyNo + "/task/" + taskNo; // 상세 페이지로 리다이렉트
		    } else {
		        // 등록 실패 처리
		        return "redirect:/" + companyNo + "/task/new"; // 다시 등록 페이지로 리다이렉트
		    }
		}

		/** 특정 프로젝트의 참여자 목록 조회 */
		@GetMapping("/participants/{projectNo}")
		@ResponseBody
		public List<ProjectParticipantVO> getParticipants(@PathVariable("projectNo") long projectNo) {
		    List<ProjectParticipantVO> participants = taskService.selectListAllParticipants(projectNo);
		    return participants; // 해당 프로젝트의 참여자 목록 조회
		}
}
