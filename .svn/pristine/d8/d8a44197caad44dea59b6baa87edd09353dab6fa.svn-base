package kr.or.ddit.works.approval.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.security.CustomUserDetailService;
import kr.or.ddit.security.RealUserWrapper;
import kr.or.ddit.works.approval.service.ApprDocService;
import kr.or.ddit.works.approval.vo.DocFormVO;
import kr.or.ddit.works.login.vo.AllUserVO;
import kr.or.ddit.works.organization.service.PositionService;
import kr.or.ddit.works.organization.vo.EmployeeVO;
import lombok.extern.slf4j.Slf4j;
@Slf4j
@Controller
@RequestMapping("/{companyNo}/approval")
public class ApprDocController {
	
	@Autowired
	private ApprDocService apprDocService;
	
	@Autowired
	private PositionService positionService;
	
	
	
	/**
	 * 
	 * @param companyNo
	 * @param docFrmName
	 * @param model
	 * @return
	 */
	@PostMapping
	public String selectListSearchDocForm(
			@Param("companyNo")String companyNo
			, @Param("docFrmName") String docFrmName
			, Model model
			) {
		model.addAttribute("companyNo", companyNo);
		model.addAttribute("docFrmName", docFrmName);
		
		return "";
	}
	
	/**
	 * 새 문서 작성 폼으로 이동
	 * @param companyNo
	 * @param model
	 * @return
	 */
	@GetMapping("new")
	public String insertApprDocFormUI(
		@PathVariable("companyNo")String companyNo,
		Model model
	) {
		model.addAttribute("companyNo",companyNo);
	
		return "gw:appr/apprForm";
	}
	
	
	
	/**
	 * 문서 상세 조회
	 * @param docFrmNo
	 * @param model
	 */
	@GetMapping("detail")
	@ResponseBody
	public ResponseEntity<Map<String, Object>> selectdocFrmDeatil(
	        @RequestParam("docFrmNo") String docFrmNo,
	        Authentication authentication) {

	    // 문서 양식과 자동결재선 조회
	    DocFormVO formDetail = apprDocService.selectdocFrmDeatil(docFrmNo);
	    List<DocFormVO> aprlLineAuto = apprDocService.selectDetailAutoLine(docFrmNo);
	    log.info("aprlLineAuto : {}", aprlLineAuto);

	    if (formDetail == null) {
	        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
	    }

	    // 로그인한 사용자 정보 조회
	    RealUserWrapper userDetails = (RealUserWrapper) authentication.getPrincipal();
	    log.info("userDeatils : {}", userDetails);
	    EmployeeVO realUser = (EmployeeVO) userDetails.getRealUser();
	    
	    
	    // positionCd로 positionName 조회
	    String positionCd = realUser.getPositionCd();
	    String positionName = positionService.selectPositionName(positionCd); // 서비스 메서드 필요
	    realUser.setPositionName(positionName); // 값 세팅
	    log.info("realUser : {}", realUser);

	    // JSON 응답 구성
	    Map<String, Object> response = new HashMap<>();
	    response.put("docFrmContent", formDetail.getDocFrmContent());
	    response.put("aprlLineAuto", aprlLineAuto);
	    response.put("realUser", realUser); // 로그인 사용자 정보 추가

	    return ResponseEntity.ok(response);
	}
	
	
	
	

}
