<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.works.mybatis.mappers.NoticeMapper">

	<resultMap type="NoticeVO" id="noticeMap" autoMapping="true">
		<id property="noticeNo" column="NOTICE_NO"/>
		<result property="empId" column="EMP_ID"/>
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="noticeCategory" column="NOTICE_CATEGORY"/>
		<result property="noticeTitle" column="NOTICE_TITLE"/>
		<result property="noticeContent" column="NOTICE_CONTENT"/>
		<result property="noticeCreatedAt" column="NOTICE_CREATED_AT"/>
		<result property="noticeUpdatedAt" column="NOTICE_UPDATED_AT"/>
		<result property="noticeViewCount" column="NOTICE_VIEW_COUNT"/>
		<result property="isDraft" column="IS_DRAFT"/>
		<collection property="file" ofType="AttachFileVO">
			<id property="attachFileNo" column="ATTACH_FILE_NO" />
			<result property="fileGroupNo" column="FILE_GROUP_NO"/>
			<result property="attachFileNo" column="ATTACH_FILE_NO"/>
			<result property="attachFileName" column="ATTACH_FILE_NAME"/>
			<result property="attachOrgFileName" column="ATTACH_ORG_FILE_NAME"/>
			<result property="attachFileSize" column="ATTACH_FILE_SIZE"/>
			<result property="attachFilePath" column="ATTACH_FILE_PATH"/>
			<result property="attachFileExt" column="ATTACH_FILE_EXT"/>
			<result property="attachFileDate" column="ATTACH_FILE_DATE"/>
			<result property="attachFileStatus" column="ATTACH_FILE_STATUS"/>
		</collection>
		<collection property="postAttachFileVo" ofType="PostAttachFileVO">
			<id property="no" column="NO"/>
		</collection>
	</resultMap>

	<!-- 공지사항 조회 조건 -->
    <sql id="commonWhereClause">
        WHERE 1 = 1
        <!-- 공지사항 분류 선택 조건 -->
        <if test="detailCondition.category == 'all'">
            AND
            ( (N.NOTICE_CATEGORY LIKE '부서%' AND U.DEPT_CD = #{detailCondition.deptCd})
            OR
                (N.NOTICE_CATEGORY LIKE '전사%') )
        </if>
        <if test="detailCondition.category == 'company'">
            AND
            N.NOTICE_CATEGORY LIKE '전사%'
        </if>
        <if test="detailCondition.category == 'depart'">
            AND
            (N.NOTICE_CATEGORY LIKE '부서%' AND U.DEPT_CD = #{detailCondition.deptCd})
        </if>


        <!-- 공지사항 검색 필터링 조건 -->
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
            AND (
                <choose>
                    <when test="simpleCondition.searchType == 'title'">
                        INSTR(N.NOTICE_TITLE, #{simpleCondition.searchWord}) > 0
                    </when>
                    <when test="simpleCondition.searchType == 'content'">
                        INSTR(N.NOTICE_CONTENT, #{simpleCondition.searchWord}) > 0
                    </when>
                    <otherwise>
                        (INSTR(N.NOTICE_TITLE, #{simpleCondition.searchWord}) > 0
                        OR
                        INSTR(N.NOTICE_CONTENT, #{simpleCondition.searchWord}) > 0)
                    </otherwise>
                </choose>
            )
        </if>

        <if test="detailCondition.companyNo != null">
	        AND N.COMPANY_NO = #{detailCondition.companyNo}
	    </if>

        <!-- 임시저장된 공지사항 제외 조건 -->
        AND
        	N.IS_DRAFT != 'Y'
    </sql>

    <!-- 공지사항 전체 조회 -->
    <select id="selectAllNotice" parameterType="map" resultMap="noticeMap">
	SELECT NOTICE.*
		FROM (
		    SELECT
		        ROWNUM RNUM, NOTICELIST.*
		    FROM (
		        SELECT
		            N.NOTICE_NO
		            , N.EMP_ID
		            , N.NOTICE_CATEGORY
		            , N.NOTICE_TITLE
		            , N.NOTICE_CONTENT
		            , TO_CHAR(N.NOTICE_CREATED_AT, 'YYYY-MM-DD') AS NOTICE_CREATED_AT
		            , N.NOTICE_UPDATED_AT
		            , N.NOTICE_VIEW_COUNT
		            , N.IS_DRAFT
		            , N.FILE_GROUP_NO
		            , N.COMPANY_NO
		            , U.POSITION_NAME
		            , U.EMP_NM
		            , U.DEPT_CD
		            , AT.ATTACH_FILE_NO
		            , AT.ATTACH_ORG_FILE_NAME
		        FROM NOTICE N
		        INNER JOIN
		            ORGANIZATION U ON N.EMP_ID = U.EMP_ID
		        LEFT JOIN
		            POST_ATTACH_FILE NF ON N.NOTICE_NO = NF.NOTICE_NO
		        LEFT JOIN
		            ATTACH_FILE AT ON NF.ATTACH_FILE_NO = AT.ATTACH_FILE_NO
		        <include refid="commonWhereClause" />
		        ORDER BY
		            N.NOTICE_NO DESC
		    ) NOTICELIST
		) NOTICE
	WHERE
		NOTICE.RNUM BETWEEN #{startRow} AND #{endRow}
	  AND
	  	COMPANY_NO = #{companyNo}
    </select>

    <!-- 공지사항 총 레코드 수 조회 -->
    <select id="selectAllNoticeTotalRecord" resultType="int">
        SELECT
            COUNT(*)
        FROM
            NOTICE N
        INNER JOIN
            ORGANIZATION U ON N.EMP_ID = U.EMP_ID
        <include refid="commonWhereClause" />
    </select>

	<!-- 게시글 등록 -->
	<insert id="insertNotice" parameterType="NoticeVO">
		INSERT INTO NOTICE (
		    NOTICE_NO
		    , EMP_ID
		    , NOTICE_CATEGORY
		    , NOTICE_TITLE
		    , NOTICE_CONTENT
		    , NOTICE_CREATED_AT
		    , IS_DRAFT
		    , FILE_GROUP_NO
		    , COMPANY_NO
	    ) VALUES (
	    	#{noticeNo,jdbcType=NUMERIC}
			, #{empId,jdbcType=VARCHAR}
			, #{noticeCategory,jdbcType=VARCHAR}
			, #{noticeTitle,jdbcType=VARCHAR}
			, #{noticeContent,jdbcType=VARCHAR}
			, TO_CHAR(SYSDATE, 'YYYY-MM-DD')
			<if test="isDraft == 'Y'">
				, 'Y'
			</if>
			<if test="isDraft != 'Y'">
				, 'N'
			</if>
			, #{fileGroupNo,jdbcType=NUMERIC}
			, #{companyNo}
	    )
	</insert>

	<!-- 임시저장글 개수 -->
	<select id="isDraftCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM
			NOTICE
		WHERE
			IS_DRAFT = 'Y'
		AND
			EMP_ID = #{empId,jdbcType=VARCHAR}
	</select>

	<!-- 임시저장글 가져오기 -->
	<select id="isDraftList" resultType="NoticeVO">
		SELECT
		  NOTICE_NO
		  , EMP_ID
		  , NOTICE_CATEGORY
		  , NOTICE_TITLE
		  , NOTICE_CONTENT
		  , IS_DRAFT
		FROM
		    NOTICE
		WHERE
		    IS_DRAFT = 'Y'
		    AND EMP_ID = #{empId,jdbcType=VARCHAR}
	</select>

	<!-- 게시글 삭제 -->
	<delete id="deleteNotice">
		DELETE FROM
			NOTICE
		WHERE
			EMP_ID = #{empId,jdbcType=VARCHAR}
		AND NOTICE_NO IN
		<foreach collection="noticeNo" item="noticeNo" open="(" close=")" separator=",">
			#{noticeNo, jdbcType=NUMERIC}
		</foreach>
	</delete>

	<select id="basicSelectAllWithCompany" parameterType="NoticeVO" resultMap="noticeMap">
		SELECT
		      N.NOTICE_NO
		    , N.EMP_ID
		    , N.NOTICE_CATEGORY
		    , N.NOTICE_TITLE
		    , N.NOTICE_CONTENT
		    , TO_CHAR(N.NOTICE_CREATED_AT, 'YYYY-MM-DD') AS NOTICE_CREATED_AT
		    , N.NOTICE_UPDATED_AT
		    , N.NOTICE_VIEW_COUNT
		    , N.IS_DRAFT
		    , N.FILE_GROUP_NO
		    , N.COMPANY_NO
		    , U.POSITION_NAME
		    , U.EMP_NM
		    , U.DEPT_CD
		    , AT.ATTACH_FILE_NO
		    , AT.ATTACH_ORG_FILE_NAME
		    , AT.ATTACH_FILE_SIZE
		    , AT.ATTACH_FILE_PATH
		    , AT.ATTACH_FILE_EXT
		FROM
		    NOTICE N
		INNER JOIN
		    ORGANIZATION U ON N.EMP_ID = U.EMP_ID
		LEFT JOIN
		    POST_ATTACH_FILE NF ON N.NOTICE_NO = NF.NOTICE_NO
		LEFT JOIN
		    ATTACH_FILE AT ON NF.ATTACH_FILE_NO = AT.ATTACH_FILE_NO
		WHERE
		    N.NOTICE_NO = #{notice.noticeNo}
		AND
		    N.COMPANY_NO = #{notice.companyNo}
	</select>

	<!-- 공지사항 수정 -->
	<update id="updateNotice">
		UPDATE
			NOTICE
		SET
			NOTICE_TITLE = #{noticeTitle,jdbcType=VARCHAR}
			, NOTICE_CONTENT = #{noticeContent,jdbcType=VARCHAR}
			, NOTICE_UPDATED_AT = CURRENT_DATE
			<if test="isDraft == 'Y'">
				, IS_DRAFT = 'Y'
			</if>
			<if test="isDraft != 'Y'">
				, IS_DRAFT = 'N'
			</if>
			, FILE_GROUP_NO = #{fileGroupNo,jdbcType=NUMERIC}
		WHERE
			EMP_ID = #{empId,jdbcType=VARCHAR}
		AND
			NOTICE_NO = #{noticeNo, jdbcType=NUMERIC}
	</update>

	<!-- 공지사항 조회수 UPDATE -->
	<update id="noticeViewCnt">
		UPDATE
			NOTICE
		SET
			NOTICE_VIEW_COUNT = NOTICE_VIEW_COUNT + 1
		WHERE
			NOTICE_NO = #{noticeNo, jdbcType=NUMERIC}
	</update>

	<!-- 첨부파일 시퀀스 번호 가져오기 -->
	<select id="seqNoticeFile" resultType="long">
		SELECT
			ATTACH_FILE_SEQ.NEXTVAL
		FROM
			DUAL
	</select>

	<!-- 공지사항 시퀀스 번호 가져오기 -->
	<select id="seqNotice" resultType="int">
		SELECT
			NOTICE_SEQ.NEXTVAL
		FROM
			DUAL
	</select>

	<!-- 파일 업로드 INSERT -->
	<insert id="insertNoticeFile" parameterType="java.util.Map">

		<foreach collection="fileList" item="file" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
		    INTO ATTACH_FILE (
		        ATTACH_FILE_NO
		        , FILE_GROUP_NO
		        , ATTACH_FILE_NAME
		        , ATTACH_ORG_FILE_NAME
		        , ATTACH_FILE_SIZE
		        , ATTACH_FILE_PATH
		        , ATTACH_FILE_EXT
		        , ATTACH_FILE_DATE
		        , ATTACH_FILE_STATUS
		        , EMP_ID
		    ) VALUES (
           		#{file.attachFileNo,jdbcType=VARCHAR}
	            , #{file.fileGroupNo,jdbcType=NUMERIC}
	            , #{file.attachFileName,jdbcType=VARCHAR}
	            , #{file.attachOrgFileName,jdbcType=VARCHAR}
	            , #{file.attachFileSize,jdbcType=NUMERIC}
	            , #{file.attachFilePath,jdbcType=VARCHAR}
	            , #{file.attachFileExt,jdbcType=VARCHAR}
	            , TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	            , #{file.attachFileStatus,jdbcType=CHAR}
	            , #{file.empId,jdbcType=VARCHAR}
		     )
		    </foreach>
	</insert>

	<!-- 파일과 게시글 관리를 위한 테이블 INSERT -->
	<insert id="insertFileNotice" parameterType="java.util.Map">
		INSERT INTO POST_ATTACH_FILE (
		    NO
		    , NOTICE_NO
		    , ATTACH_FILE_NO
		) VALUES (
			POST_ATTACH_FILE_SEQ.NEXTVAL
			, #{noticeNo,jdbcType=NUMERIC}
			, #{attachFileNo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 파일 삭제 -->
	<delete id="deleteFile" parameterType="String">
		DELETE FROM
			ATTACH_FILE
		WHERE
			ATTACH_FILE_NO = #{attachFileNo,jdbcType=VARCHAR}
	</delete>

	<!-- 파일 다운로드 -->
	<select id="selectByFileNo" resultType="AttachFileVO">
	    SELECT
	        ATTACH_FILE_NO,
	        FILE_GROUP_NO,
	        ATTACH_FILE_NAME,
	        ATTACH_ORG_FILE_NAME,
	        ATTACH_FILE_SIZE,
	        ATTACH_FILE_PATH,
	        ATTACH_FILE_EXT,
	        ATTACH_FILE_DATE,
	        ATTACH_FILE_SIZE,
	        ATTACH_FILE_STATUS,
	        EMP_ID
	    FROM
	        ATTACH_FILE
	    WHERE
	        ATTACH_FILE_NO = #{fileNo}
	</select>

	<!-- 메인페이지 위젯용 공지사항 -->
	<select id="selectRecentNoticeList" resultType="NoticeVO">
		  SELECT
		    n.notice_no,
		    n.notice_title,
		    n.notice_category,
		    n.notice_created_at,
		    e.emp_nm,
		    p.position_name
		  FROM
		    notice n
		  JOIN
		    employee e ON n.emp_id = e.emp_id
		  LEFT JOIN
		    position p ON e.position_cd = p.position_cd
		  WHERE
		    n.company_no = #{companyNo}
		  ORDER BY
		    n.notice_created_at DESC
		  FETCH FIRST 5 ROWS ONLY
	</select>

	<select id="selectLogin">
	SELECT
	    DEPT_CD
	  , PARENT_DEPT_CD
	  , DEPT_NAME
	  , MANAGER_EMP_ID
	  , CREATE_AT
	  , COMPANY_NO
	FROM
	    DEPARTMENT
	WHERE
		MANAGER_EMP_ID = #{managerEmpId}
	</select>

</mapper>
