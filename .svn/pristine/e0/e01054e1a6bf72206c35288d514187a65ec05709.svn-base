document.addEventListener("DOMContentLoaded", () => {
    const basePath = window.location.pathname.split("/").slice(0, -2).join("/");
    const adminBasePath = window.location.pathname.split("/").slice(0, -3).join("/");
    const isAdminPage = window.location.pathname.includes("admin");
    const path = isAdminPage ? adminBasePath : basePath;

    const initFancyTree = () => {
        $("#tree").fancytree({
            source: {
                url: `${path}/appr/parentFolder`,
                cache: false
            },
            lazyLoad: function(event, data) {
                var node = data.node;
                let mode = node.data.parentDocFolder ? "document" : "folder";
                data.result = {
                    url: `${path}/appr/childrenFolder`,
                    data: {mode: mode, parent: node.key},
                    cache: false
                };
            },
            activate: function(event, data) {
                var node = data.node;
                
                if (node.isFolder()) {
                    // 폴더 클릭 시 하위 문서 목록 불러오기
                    loadFolderDocuments(node.key);
                } else {
                    // 문서 클릭 시 상세 내용 불러오기
                    loadDocumentDetail(node.key);
                }
            },
            beforeSelect: function(event, data) {
                if (data.node.isFolder()) {
                    return false; // 폴더 선택 방지
                }
            }
        });
    };

    // 폴더 문서 목록 조회 (AJAX 요청)
    const loadFolderDocuments = (docFolderNo) => {
		console.log("docFolderNo",docFolderNo)
        $.ajax({
            url: `${path}/approval/admin/folderDoc`,
            type: 'GET',
            data: { docFolderNo: docFolderNo },
            success: function(response) {
                updateDocumentTable(response);
            },
            error: function() {
                alert('문서 목록을 불러오는 데 실패했습니다.');
            }
        });
    };

    // 문서 내용 조회 (AJAX 요청)
    const loadDocumentDetail = (docFrmNo) => {
        $.ajax({
            url: `${path}/approval/detail`,
            type: 'GET',
            data: { docFrmNo: docFrmNo },
            success: function(response) {
                if (response && response.docFrmContent) {
                    document.querySelector('#templateDetails').innerHTML = response.docFrmContent;
                } else {
                    alert('문서를 불러오는 데 실패했습니다.');
                }

				CKEDITOR.replace(document.querySelector('.txta_editor'), {
					versionCheck: false,
					height: '100%', // 원하는 높이(px)
					width: '100%' // 가로 크기(퍼센트 또는 px)
				});
            },
            error: function() {
                alert('서버와의 연결에 실패했습니다.');
            }
        });
    };

    // 동적으로 테이블 업데이트
    const updateDocumentTable = (documents) => {
        const tableBody = document.querySelector("#docTableTbody");
        tableBody.innerHTML = ""; // 기존 데이터 초기화

        if (documents.length === 0) {
            tableBody.innerHTML = "<tr><td colspan='2'>문서가 없습니다.</td></tr>";
            return;
        }
		console.log(documents)
        documents.forEach(doc => {
            const row = `<tr id="${doc.docFrmNo}">
                <td>${doc.docFrmName}</td>
                <td>${doc.isEnabled}</td>
            </tr>`;
            tableBody.innerHTML += row;
        });
		
		// tr 요소에 클릭 이벤트 리스너 추가
		const rows = tableBody.querySelectorAll('tr');
		rows.forEach(row => {
		    row.addEventListener('click', function() {
		        const docFrmNo = this.id; // tr의 id를 가져옵니다.
		        openModal(docFrmNo); // 클릭된 tr의 id를 openModal에 전달합니다.
		    });
		});
		
		function openModal(docFrmNo){
			console.log(docFrmNo);
			// 해당 문서의 상세 내용 가져오기 (예: 서버에서 로드하거나 미리 저장된 내용)
		    const doc = documents
	
			if (doc) {
			    console.log('문서 정보:', doc);
				// 모달을 표시
		        const modal = document.querySelector('#docDetailModal');
		        modal.style.display = 'block';
		        
		        // CKEditor 초기화 및 내용 로드
		        CKEDITOR.replace('editor');
		        CKEDITOR.instances.editor.setData(doc.docFrmContent); // docFrmContent에 상세 HTML이 있다고 가정
	
		        // 저장 버튼 클릭 시 저장 처리
		        document.getElementById('saveButton').addEventListener('click', () => {
		            const updatedContent = CKEDITOR.instances.editor.getData();
		            // 수정된 콘텐츠 저장 (예: 서버에 업데이트 요청)
		            saveUpdatedContent(docFrmNo, updatedContent);
		            modal.style.display = 'none'; // 모달 닫기
		        });
	
		        // 닫기 버튼 클릭 시 모달 닫기
		        document.getElementById('closeButton').addEventListener('click', () => {
		            modal.style.display = 'none'; // 모달 닫기
		        });
			} else {
			    console.log('문서가 존재하지 않습니다.');
			}
		
		}
    };
	
	
	

    // FancyTree 초기화
    if (document.querySelector('#tree')) {
        initFancyTree();
    }
});
