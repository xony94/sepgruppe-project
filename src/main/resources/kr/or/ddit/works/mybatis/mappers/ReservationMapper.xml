<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.works.mybatis.mappers.ReservationMapper">

    <!-- 전체 예약 목록 조회 -->
    <select id="selectListAllReservation" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
        SELECT 
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        FROM RESERVATION
        ORDER BY RESERVATION_START_TIME
    </select>

   <!-- 예약 상세 조회 -->
	<select id="selectReservationDetail" parameterType="String" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
	    SELECT 
	        R.RESERVATION_NO,
	        R.ROOM_NO,
	        R.EMP_ID,
	        E.EMP_NM AS empNm,  <!-- 사원이름을 가져오기 위해 EMPLOYEE 테이블과 조인 -->
	        R.RESERVATION_DATE,
	        R.RESERVATION_START_TIME,
	        R.RESERVATION_END_TIME,
	        R.RESERVATION_CONTENT
	    FROM RESERVATION R
	    JOIN EMPLOYEE E ON R.EMP_ID = E.EMP_ID  <!-- EMPLOYEE 테이블과 조인 -->
	    WHERE R.RESERVATION_NO = #{reservationNo}
	</select>


    <!-- 예약 추가 -->
    <insert id="insertReservation" parameterType="kr.or.ddit.works.reservation.vo.ReservationVO">
        INSERT INTO RESERVATION (
            RESERVATION_NO,
            ROOM_NO,
            EMP_ID,
            RESERVATION_DATE,
            RESERVATION_START_TIME,
            RESERVATION_END_TIME,
            RESERVATION_CONTENT
        ) VALUES (
            RESERVATION_SEQ.NEXTVAL,
            #{roomNo},
            #{empId},
            #{reservationDate},
            #{reservationStartTime},
            #{reservationEndTime},
            #{reservationContent}
        )
    </insert>

    <!-- 예약 수정 -->
    <update id="updateReservation" parameterType="kr.or.ddit.works.reservation.vo.ReservationVO">
        UPDATE RESERVATION
        SET 
            ROOM_NO = #{roomNo},
            EMP_ID = #{empId},
            RESERVATION_DATE = #{reservationDate},
            RESERVATION_START_TIME = #{reservationStartTime},
            RESERVATION_END_TIME = #{reservationEndTime},
            RESERVATION_CONTENT = #{reservationContent}
        WHERE 
            RESERVATION_NO = #{reservationNo}
    </update>

    <!-- 예약 삭제 -->
    <delete id="deleteReservation" parameterType="String">
        DELETE FROM RESERVATION
        WHERE 
            RESERVATION_NO = #{reservationNo}
    </delete>

<!--     특정 날짜의 예약 조회 -->
<!--     <select id="selectReservationsByDate" parameterType="java.time.LocalDate" resultType="kr.or.ddit.works.reservation.vo.ReservationVO"> -->
<!--         SELECT  -->
<!--             RESERVATION_NO, -->
<!--             ROOM_NO, -->
<!--             EMP_ID, -->
<!--             RESERVATION_DATE, -->
<!--             RESERVATION_START_TIME, -->
<!--             RESERVATION_END_TIME, -->
<!--             RESERVATION_CONTENT -->
<!--         FROM RESERVATION -->
<!--         WHERE TRUNC(RESERVATION_DATE) = TRUNC(#{reservationDate})  -->
<!--         ORDER BY RESERVATION_START_TIME -->
<!--     </select> -->

    <!-- 로그인한 사용자의 예약 목록 조회 -->
		<select id="getMyReservationsByEmpId" parameterType="String" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
		    SELECT 
		        r.RESERVATION_NO, 
		        r.ROOM_NO, 
		        rm.ROOM_NM AS roomName, 
		        r.EMP_ID, 
		        r.RESERVATION_DATE, 
		        r.RESERVATION_START_TIME, 
		        r.RESERVATION_END_TIME, 
		        r.RESERVATION_CONTENT 
		    FROM 
		        RESERVATION r
		    JOIN 
		        MEETING_ROOM rm ON r.ROOM_NO = rm.ROOM_NO
		    WHERE 
		        r.EMP_ID = #{empId}
		</select>
    
    <!-- 특정 날짜와 회의실 번호에 대한 예약 현황 조회 -->
    <select id="selectReservationsByDate" parameterType="java.time.LocalDate" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
	    SELECT 
	    	R.EMP_ID,
	        R.RESERVATION_NO,
	        R.ROOM_NO,
	        E.EMP_NM AS empNm,  <!-- 사원이름을 가져오기 위해 EMPLOYEE 테이블과 조인 -->
	        R.RESERVATION_DATE,
	        R.RESERVATION_START_TIME,
	        R.RESERVATION_END_TIME,
	        R.RESERVATION_CONTENT
	    FROM RESERVATION R
	    LEFT JOIN EMPLOYEE E ON R.EMP_ID = E.EMP_ID  <!-- EMPLOYEE 테이블과 조인 -->
	    WHERE R.RESERVATION_DATE = #{reservationDate} 
	    ORDER BY R.RESERVATION_START_TIME
	</select>

	<!-- 특정 날짜의 예약 조회 -->
	<select id="findReservationsByDate" parameterType="java.time.LocalDate" resultType="kr.or.ddit.works.reservation.vo.ReservationVO">
	    SELECT *
	    FROM RESERVATION
	    WHERE TRUNC(RESERVATION_DATE) = TRUNC(#{date})
	</select>

    <!-- 모든 회의실 목록 조회 -->
		<select id="selectListAllRoom" resultType="kr.or.ddit.works.reservation.vo.MeetingRoomVO">
		    SELECT 
		        ROOM_NO,
		        ROOM_NM,
		        ROOM_LOCATION,
		        ROOM_AVAILABILITY,
		        ROOM_CAPACITY
		    FROM MEETING_ROOM
		    ORDER BY ROOM_NO
		</select>

</mapper>
