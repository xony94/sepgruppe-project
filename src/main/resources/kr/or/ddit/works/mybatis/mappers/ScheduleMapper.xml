<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.works.mybatis.mappers.ScheduleMapper">

<!-- 일정 목록 조회 -->
<select id = "selectScheduleList" resultType="ScheduleVO">
	SELECT
		*
	FROM SCHEDULE
</select>

<!-- 특정 일정 조회 -->
<select id="selectSchedule" parameterType="int" resultType="ScheduleVO">
SELECT S.EMP_ID,
       S.SCHDL_NO,
       S.SCHDL_NM,
       S.SCHDL_CN,
       S.SCHDL_BGNG_YMD,
       S.SCHDL_END_YMD,
       S.SCHDL_LOCATION,
       S.SCHDL_CREATE_DATE,
       S.SCHDL_STATUS,
       S.SCHDL_UPDATE_DATE,
       SA.ATTENDANCE_STATUS,
       ST.SCHEDULE_TYPE_NM
FROM SCHEDULE S
LEFT JOIN (
    SELECT SA.SCHDL_NO, SA.EMP_ID, SA.ATTENDANCE_STATUS,
           ROW_NUMBER() OVER (PARTITION BY SA.SCHDL_NO ORDER BY SA.EMP_ID) AS RN
    FROM SCHEDULE_ATTENDEES SA
) SA ON S.SCHDL_NO = SA.SCHDL_NO AND SA.RN = 1
LEFT JOIN SCHEDULE_TYPE ST ON S.SCHEDULE_TYPE_NO = ST.SCHEDULE_TYPE_NO
WHERE S.SCHDL_NO = #{schdlNo}        
</select>

<!-- 메인 대쉬보드 위젯용 스케쥴 조회 -->
<select id="selectThisMonthSchedules" parameterType="map" resultType="kr.or.ddit.works.schedule.vo.ScheduleVO">
  SELECT 
    schdl_no,
    emp_id,
    schdl_nm,
    schdl_cn,
    schdl_bgng_ymd,
    schdl_end_ymd,
    schdl_location,
    schdl_create_date,
    schdl_status,
    schedule_type_no,
    (SELECT schedule_type_nm FROM schedule_type st WHERE st.schedule_type_no = s.schedule_type_no) AS schedule_type_nm
  FROM schedule s
  WHERE emp_id = #{empId}
    AND schdl_bgng_ymd BETWEEN #{start} AND #{end}
</select>
	


<!-- 일정 등록 -->
<insert id="insertSchedule">
    INSERT INTO schedule (
    	SCHDL_NO,
        schedule_type_no,
        emp_id,
        schdl_nm,
        schdl_cn,
        schdl_bgng_ymd,
        
        schdl_end_ymd,
        schdl_location,
        schdl_create_date,
<!--         notify_time, -->
        schdl_status,
        project_no
    ) VALUES (
        schdl_seq.NEXTVAL
        , #{scheduleTypeNo}
	    , #{empId, jdbcType=VARCHAR}
	    , #{schdlNm, jdbcType=VARCHAR}
	    , #{schdlCn, jdbcType=VARCHAR}
	    , #{schdlBgngYmd, jdbcType=DATE}
	    , #{schdlEndYmd, jdbcType=DATE}
	    , #{schdlLocation, jdbcType=VARCHAR}
	    , #{schdlCreateDate, jdbcType=DATE}
<!-- 	    , #{notifyTime, jdbcType=VARCHAR} -->
	    , #{schdlStatus, jdbcType=VARCHAR}
	    , #{projectNo}
    )



</insert>

<!-- 일정 수정 -->
<update id="updateSchedule">
	UPDATE SCHEDULE
	SET
	    SCHDL_NO = #{schdlNo,jdbcType=NUMERIC}
	    , SCHEDULE_TYPE_NO = #{scheduleTypeNo,jdbcType=NUMERIC}
	    , EMP_ID = #{empId,jdbcType=VARCHAR}
	    , SCHDL_NM = #{schdlNm,jdbcType=VARCHAR}
	    , SCHDL_CN = #{schdlCn,jdbcType=VARCHAR}
	    , SCHDL_BGNG_YMD = #{schdlBgngYmd,jdbcType=DATE}
	    , SCHDL_END_YMD = #{schdlEndYmd,jdbcType=DATE}
	    , SCHDL_LOCATION = #{schdlLocation,jdbcType=VARCHAR}
	    , SCHDL_CREATE_DATE = #{schdlCreateDate,jdbcType=DATE}
	    , NOTIFY_TIME = #{notifyTime,jdbcType=DATE}
	    , SCHDL_STATUS = #{schdlStatus,jdbcType=VARCHAR}
	    , SCHDL_UPDATE_DATE = #{schdlUpdateDate,jdbcType=DATE}
	WHERE SCHDL_NO = #{schdlNo}
</update>

<!-- 일정 삭제 -->
<delete id="deleteSchedule">
	DELETE FROM SCHEDULE
	WHERE SCHDL_NO = #{schdlNo}
</delete>

<delete id="deleteSchedulesByProjectNos">
    DELETE FROM schedule
    WHERE project_no IN
    <foreach collection="list" item="projectNo" open="(" separator="," close=")">
        #{projectNo}
    </foreach>
</delete>


<!-- 일정 타입 목록 조회 -->
<select id = "selectScheduleType" resultType="ScheduleTypeVO">
	SELECT
		*
	FROM SCHEDULE_TYPE
</select>

</mapper>
