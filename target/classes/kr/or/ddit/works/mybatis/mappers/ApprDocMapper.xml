<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 * 전자결재 문서 관련 기능 매퍼
 *
 * == 개정이력(Modification Information) ==
 *   
 *   수정일      			수정자           수정내용
 *  ============   	============== =======================
 *  2025. 3. 17.     	JYS            최초 생성
 *
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.works.mybatis.mappers.ApprDocMapper">
    
    <resultMap type="DocFormVO" id="DocFormFolderMap" autoMapping="true">
        <collection property="docFolderVo" ofType="DocFolderVO" autoMapping="true" />
    </resultMap>
    
    <!-- 최상위 폴더 조회 -->
    <select id="selectParentFolder" resultType="DocFolderVO">
    	SELECT
		    doc_folder_no
		  , parent_doc_folder
		  , doc_folder_name
		FROM
		    doc_folder
		WHERE parent_doc_folder IS NULL
    </select>
    
    <!-- 하위 폴더 조회 -->
    <select id="selectFolderChild" resultType="DocFolderVO">
    	SELECT
		    doc_folder_no
		  , parent_doc_folder
		  , doc_folder_name
		FROM
		    doc_folder
		WHERE parent_doc_folder = #{docFolderNo}
    </select>
    
    <!-- 폴더 내에 저장된 결재양식 목록 조회 -->
 	<select id="selectDocument" resultType="DocFormVO">
 		SELECT
		    doc_frm_no
		  , doc_folder_no
		  , doc_frm_name
		  , doc_frm_content
		  , is_enabled
		FROM
		    doc_form
 		WHERE doc_folder_no = #{docFolderNo}
 	</select>
 	
 	<!-- 폴더 계층 구조 저장된 결재양식 조회(관리자) -->
    <select id="selectListAllDocForm" resultType="DocFormVO">
       SELECT
		    doc_frm_no
		  , doc_folder_no
		  , doc_frm_name
		  , doc_frm_content
		  , is_enabled
		  , file_group_no
		FROM
		    doc_form
    </select>
    
    <!-- 결재양식 제목 검색 결과만 조회 -->
    <select id="selectListSearchDocForm" parameterType="string" resultMap="DocFormFolderMap">
    	<bind name="searchPattern" value="'%' + docFrmName + '%'" /> <!-- %를 추가 -->
    	SELECT
		    f.doc_frm_no,
		    f.doc_folder_no,
		    df.parent_doc_folder,
		    df.doc_folder_name,
		    f.doc_frm_name,
		    f.doc_frm_content,
		    f.is_enabled,
		    f.file_group_no
		FROM
		    doc_form f
		LEFT JOIN 
		    doc_folder df ON f.doc_folder_no = df.doc_folder_no
		WHERE 
		    f.doc_frm_name LIKE #{searchPattern}

    </select>
   
   <!-- 결재양식 단건 조회 -->
   	<select id="selectdocFrmDeatil" parameterType="string">
   		SELECT
		    doc_frm_no
		  , doc_folder_no
		  , doc_frm_name
		  , doc_frm_content
		  , is_enabled
		  , file_group_no
		FROM
		    doc_form
		WHERE doc_frm_no = #{docFrmNo}
   	</select>
    
    <!--  양식 번호 시퀀스 -->
    <select id="selectNextSerial" >
    	SELECT COUNT(*) + 1
		FROM DOC_FORM
		WHERE DOC_FRM_NO LIKE 'DFR_' || SUBSTR(#{docFolderNo}, 4) || '%'
    </select>
    
    <!-- 결재양식 추가 (관리자) -->
    <insert id="insertDocForm" parameterType="DocFormVO">
        INSERT INTO doc_form (
            doc_frm_no
            , doc_folder_no
            , doc_frm_name
            , doc_frm_content
            , is_enabled
        ) VALUES (
            #{docFrmNo}
            , #{docFolderNo}
            , #{docFrmName}
            , #{docFrmContent, jdbcType=CLOB}
            , 'Y'
        )
    </insert>
    
    <!-- 결재양식 내용 추가 (관리자) -->
    <update id="updateDocFormHtml" parameterType="DocFormVO">
        UPDATE 
            doc_form
        SET 
            doc_frm_content = #{docFrmContent, jdbcType=CLOB}
        WHERE 
            doc_frm_no = #{docFrmNo}
    </update>
    
    
    <update id="updateDocForm" parameterType="DocFormVO"> 
        UPDATE doc_form
        SET
            doc_frm_name = #{docFrmName}
            , doc_frm_content = #{docFrmContent}
        WHERE
            doc_frm_no = #{docFrmNo}
    </update>
    
    <update id="deactivateDocForm" parameterType="string">
        UPDATE doc_form
        SET
            is_enabled = null
        WHERE
            doc_frm_no = #{docFrmNo}
    </update>
    
    <update id="activateDocForm" parameterType="string">
        UPDATE doc_form
        SET
            is_enabled = 'Y'
        WHERE
            doc_frm_no = #{docFrmNo}
    </update>
    
   
    <resultMap id="AprvlLineAutoMap" type="DocFormVO">
	   <!-- DocFormVO 기본 정보 -->
	   <id property="docFrmNo" column="doc_frm_no"/>
	   <result property="docFrmName" column="doc_frm_name"/>
	   <result property="aprvlLineNo" column="aprvl_line_no"/>
	   <result property="aprvlLineName" column="aprvl_line_name"/>
	
	   <!-- 1:N 관계 매핑 (결재선 -> 결재자 리스트) -->
	    <collection property="aprvlLineAuto" ofType="AprvlLineAutoVO">
	        <result property="aprvlLineNo" column="aprvl_line_no"/>
	        <result property="aprvlLineName" column="aprvl_line_name"/>
	        <result property="docFrmNo" column="doc_frm_no"/>
	        <result property="commCodeNo" column="comm_code_no"/>
	        <result property="commCodeName" column="comm_code_name"/>
	        <result property="aprvlTurn" column="aprvl_turn"/>
	        <result property="deptCd" column="dept_cd"/>
	        <result property="deptName" column="dept_name"/>
	        <result property="positionCd" column="position_cd"/>
	        <result property="positionName" column="position_name"/>
	    </collection>
	</resultMap>
    <select id="selectListAllAutoLine" resultMap="AprvlLineAutoMap">
	    SELECT
	    	<!-- 문서 양식 정보 -->
	        df.doc_frm_no
	        , df.doc_frm_name
	        
	        , a.aprvl_line_no
	        , a.aprvl_line_name
	        <!-- 결재선 상세 목록 -->
	        , a.comm_code_no
	        , c.comm_code_name
	        , a.aprvl_turn
	        , a.dept_cd 
	        , d.dept_name
	        , a.position_cd
	        , p.position_name
	
	    FROM  doc_form df
		    join approval_line_auto a on df.doc_frm_no = a.doc_frm_no
		    left join comm_code c on a.comm_code_no = c.comm_code_no
		    left join position p on a.position_cd = p.position_cd
		    left join department d on a.dept_cd = d.dept_cd
	    ORDER BY a.aprvl_line_no, a.aprvl_turn    
	</select>
    
    <select id="selectDetailAutoLine" parameterType="String" resultMap="AprvlLineAutoMap">
    	SELECT
		    df.doc_frm_no
		    , df.doc_frm_name
		    , a.aprvl_line_no
		    , a.aprvl_line_name
		    , a.comm_code_no
		    , c.comm_code_name
		    , a.aprvl_turn
		    , a.dept_cd 
		    , d.dept_name
		    , a.position_cd
		    , p.position_name
		
		FROM  doc_form df
		    join approval_line_auto a on df.doc_frm_no = a.doc_frm_no
		    left join comm_code c on a.comm_code_no = c.comm_code_no
		    left join position p on a.position_cd = p.position_cd
		    left join department d on a.dept_cd = d.dept_cd
		WHERE df.doc_frm_no = #{docFrmNo}
		ORDER BY a.aprvl_line_no, a.aprvl_turn
   	</select>
    
    <select id="getNextAprvlLineNo" resultType="String">
	    SELECT APPROVAL_LINE_AUTO_SEQ.NEXTVAL FROM DUAL
	</select>
    
   	<insert id="insertAutoLine" parameterType="AprvlLineAutoVO">
	   INSERT INTO APPROVAL_LINE_AUTO (
		    aprvl_line_no
			, aprvl_line_name
			, doc_frm_no
		    , aprvl_turn
		    , comm_code_no
		    , dept_cd
		    , position_cd
		) VALUES( 
			#{aprvlLineNo}
	         , #{aprvlLineName}
	         , #{docFrmNo}
	         , #{aprvlTurn}
	         , #{commCodeNo}
	         , #{deptCd}
	         , #{positionCd})
	</insert>
	
	<update id="updateAutoLine" parameterType="map" >
		UPDATE APPROVAL_LINE_AUTO
	    SET
	        APRVL_TURN = #{aprvlTurn}
	        , COMM_CODE_NO = #{commCodeNo}
	        , DEPT_CD = #{deptCd}
	        , POSITION_CD = #{positionCd}
	    WHERE
	        APRVL_LINE_NO = #{aprvlLineNo}
	        AND APRVL_TURN = #{aprvlTurn}
	</update>
	
	<delete id="deleteAutoLine" parameterType="String">
		DELETE FROM APPROVAL_LINE_AUTO WHERE APRVL_LINE_NO = #{aprvlLineNo}
	</delete>
	
	<select id="getSortOrderByPositionCd" parameterType="String" resultType="int">
		SELECT sort_order
	    FROM position
	    WHERE position_cd = #{positionCd}
	</select>
	
	
	<select id="selectApprLineSearchDeptPosition" parameterType="map" resultType="EmployeeVO">
		SELECT 
            e.emp_id
            , e.emp_nm
            , e.dept_cd
            , d.dept_name
            , e.position_cd
            , p.position_name
        FROM employee e
        LEFT JOIN department d ON e.dept_cd = d.dept_cd
        LEFT JOIN position p ON e.position_cd = p.position_cd
        WHERE e.position_cd = #{positionCd}
        <if test="deptCd != null">
	        AND e.dept_cd = #{deptCd}
	    </if>
	</select>
	
	<!-- 기안문서번호 부여 -->
	<select id="selectAprvlDocSeq" resultType="int">
	    SELECT SEQ_APRVL_DOC_NO.NEXTVAL FROM DUAL
	</select>
	<!-- 문서 기안 -->
	<insert id="insertDraft" parameterType="AprvlDocVO" >
		INSERT INTO aprvl_doc (
		    aprvl_doc_no
		    , doc_frm_no
		    , aprvl_doc_title
		    , aprvl_doc_contents
		    , aprvl_doc_status
		    , is_emergency
		    , submit_date
		    , closing_date
		    , file_group_no
		) VALUES ( 
				#{aprvlDocNo}
		         , #{docFrmNo}
		         , #{aprvlDocTitle}
		         , #{aprvlDocContents}
		         , #{aprvlDocStatus}
		         , #{isEmergency}
		         , #{submitDate}
		         , #{closingDate}
		         , #{fileGroupNo} )
	</insert>
	<!-- 결재선 번호 부여 -->
	<select id="selectAprvlLineNoSeq" resultType="long">
	    SELECT SEQ_APRVL_LINE_NO.NEXTVAL FROM DUAL
	</select>
	<!-- 결재선 추가  -->
	<insert id="insertAprvlLine" parameterType="AprvlLineVO">
		INSERT INTO approval_line (
		    aprvl_line_no
		    , aprvl_doc_no
		    , emp_id
		    , aprvl_turn
		    , aprvl_status
		) VALUES ( 
				#{aprvlLineNo}
		         , #{aprvlDocNo}
		         , #{empId}
		         , #{aprvlTurn}
		         , #{aprvlStatus}
		          )
	</insert>
	
	<!-- 기안자 정보 조회 -->
	<sql id="DrafterSubquery">
	    SELECT l2.aprvl_doc_no, e2.emp_nm
	    FROM APPROVAL_LINE l2
	    JOIN EMPLOYEE e2 ON l2.emp_id = e2.emp_id
	    WHERE l2.aprvl_turn = 0
	</sql>
	
	<select id="selectApprDocStatusList" parameterType="map">
		 SELECT  
	         d.aprvl_doc_no,
	         d.doc_frm_no,
	         df.doc_frm_name,
	         d.aprvl_doc_title,
	         d.aprvl_doc_contents,
	         d.aprvl_doc_status,
	         ds.status_name,
	         d.is_emergency,
	         d.submit_date,
	         d.closing_date,
	         d.file_group_no,
	         l.emp_id,
	         drafter.emp_nm AS drafterName
	    FROM APRVL_DOC d
	    JOIN APPROVAL_LINE l ON d.aprvl_doc_no = l.aprvl_doc_no
	    JOIN DOC_FORM df ON d.doc_frm_no = df.doc_frm_no
	    JOIN APRVL_DOC_STATUS ds ON d.aprvl_doc_status = ds.status_cd
	    JOIN EMPLOYEE e ON l.emp_id = e.emp_id
	    LEFT JOIN (
	        <include refid="DrafterSubquery"/>
	    ) drafter ON drafter.aprvl_doc_no = d.aprvl_doc_no
	    WHERE l.emp_id = #{empId}
	      AND l.aprvl_status = #{status}
	    ORDER BY d.submit_date DESC, d.aprvl_doc_no DESC
	</select>
	
	<!-- 결재대기문서와 예정문서 -->
	<sql id="approvalPendingSubquery">
		SELECT 1
		FROM approval_status aps
		WHERE aps.doc_no = ad.doc_no
		  AND aps.aprvl_turn &lt; al.aprvl_turn
		  AND aps.status != 'A'
	</sql>
	<select id="selectApprDocByTurnType" parameterType="map" resultType="AprvlDocVO">
		SELECT 
		    ad.doc_no,
		    ad.title,
		    ad.status,
		    al.aprvl_turn,
		    al.position_cd,
		    e.emp_id,
		    e.emp_nm
		FROM approval_document ad
		JOIN approval_line al ON ad.doc_frm_no = al.doc_frm_no
		JOIN employee e ON e.position_cd = al.position_cd
		WHERE e.emp_id = #{empId}
		  AND ad.status = 'W'
		<if test="type == 'myTurn'">
			AND NOT EXISTS (
				<include refid="approvalPendingSubquery"/>
			)
		</if>
		<if test="type == 'upcoming'">
			AND EXISTS (
				<include refid="approvalPendingSubquery"/>
			)
		</if>
	</select>
	
	
	<select id="selectApprDocApprDrawnList" parameterType="map">
		 SELECT  
	         d.aprvl_doc_no,
	         d.doc_frm_no,
	         df.doc_frm_name,
	         d.aprvl_doc_title,
	         d.aprvl_doc_contents,
	         d.aprvl_doc_status,
	         ds.status_name,
	         d.is_emergency,
	         d.submit_date,
	         d.closing_date,
	         d.file_group_no,
	         l.emp_id,
	         drafter.emp_nm AS drafterName
	    FROM APRVL_DOC d
	    JOIN APPROVAL_LINE l ON d.aprvl_doc_no = l.aprvl_doc_no
	    JOIN DOC_FORM df ON d.doc_frm_no = df.doc_frm_no
	    JOIN APRVL_DOC_STATUS ds ON d.aprvl_doc_status = ds.status_cd
	    JOIN EMPLOYEE e ON l.emp_id = e.emp_id
	    LEFT JOIN (
	        <include refid="DrafterSubquery"/>
	    ) drafter ON drafter.aprvl_doc_no = d.aprvl_doc_no
	    WHERE l.emp_id = #{empId}
	      AND (l.aprvl_status = #{status1} OR l.aprvl_status = #{status2})
	    ORDER BY d.submit_date DESC, d.aprvl_doc_no DESC
	</select>
	
	<select id="selectAprvlDocContents" resultType="String">
		SELECT 
			APRVL_DOC_CONTENTS
		FROM 
			APRVL_DOC
		WHERE 
			APRVL_DOC_NO = #{aprvlDocNo}
	</select>
	
	<select id="selectApprLine" resultType="AprvlLineVO">
		SELECT
		    aprvl_line_no
		  , aprvl_doc_no
		  , emp_id
		  , aprvl_turn
		  , aprvl_date
		  , aprvl_status
		  , reject_rsn
		FROM
		    approval_line
		WHERE 
		    aprvl_doc_no= #{aprvlDocNo}
	</select>
	
	<update id="updateApprLineStatus" parameterType="map">
		UPDATE 
		  APPROVAL_LINE
		SET 
		  APRVL_STATUS = #{aprvlStatus},
		  APRVL_DATE = SYSDATE
		WHERE 
		  APRVL_DOC_NO = #{aprvlDocNo}
		 AND EMP_ID = #{empId}
	</update>
	
	<select id="countApprByWait" parameterType="String">
		SELECT COUNT(*)
		FROM APPROVAL_LINE
		WHERE APRVL_DOC_NO = #{aprvlDocNo}
		  AND APRVL_STATUS = 'W'
	</select>
	
	<update id="updateDocStauts" parameterType="map">
		UPDATE APRVL_DOC
	    SET APRVL_DOC_STATUS = #{docStatus}
	    WHERE APRVL_DOC_NO = #{aprvlDocNo}
	</update>
	
	<update id="updateApprovalHtml">
		UPDATE APRVL_DOC
	    SET APRVL_DOC_CONTENTS = #{aprvlDocContents}
	    WHERE APRVL_DOC_NO = #{aprvlDocNo}
	</update>
	
	<!-- 기안자 empId 조회 -->
	<select id="selectDrafterEmpId" resultType="String">
	    SELECT emp_id
	    FROM approval_line
	    WHERE aprvl_doc_no = #{aprvlDocNo}
	      AND aprvl_turn = 0
	</select>
	
	<!-- 결재문서 내용 + 양식명 조회 -->
	<select id="selectApprDocContentsByDocNo" resultType="AprvlDocVO">
	    SELECT 
	        d.aprvl_doc_no, 
	        df.doc_frm_name, 
	        d.aprvl_doc_contents
	    FROM aprvl_doc d
	    JOIN doc_form df ON d.doc_frm_no = df.doc_frm_no
	    WHERE d.aprvl_doc_no = #{aprvlDocNo}
	</select>
	
</mapper>
